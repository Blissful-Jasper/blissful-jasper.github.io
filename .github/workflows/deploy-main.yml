# 主要的 Jekyll GitHub Pages 部署工作流
name: Deploy Jekyll Site to GitHub Pages

on:
  push:
    branches: ["main", "master"]
  workflow_dispatch:

# 设置 GITHUB_TOKEN 的权限，允许部署到 GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# 只允许一个并发部署，跳过正在运行的队列中的运行
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # 构建作业
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
          bundler-cache: true  # 启用 bundler 缓存以加快构建速度
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install Node.js dependencies
        run: npm ci || npm install
      
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4
      
      - name: Build with Jekyll
        run: bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production
      
      - name: Optimize built site (optional)
        run: |
          echo "优化网站文件..."
          # HTML 压缩
          if command -v npx &> /dev/null; then
            npx html-minifier-terser ./_site/**/*.html --remove-comments --collapse-whitespace --file-ext html || echo "HTML 压缩跳过"
          fi
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  # 部署作业
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
