<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.10.0">Jekyll</generator><link href="https://blissful-jasper.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://blissful-jasper.github.io/" rel="alternate" type="text/html" /><updated>2025-07-07T15:03:38+00:00</updated><id>https://blissful-jasper.github.io/feed.xml</id><title type="html">Xianpu Ji</title><subtitle>我的研究方向包括热带波动（Kelvin waves, MJO 等）的动力学机制、热带降水的时空变率及其与波动的关系，以及气候模式（如CMIP6）下的波动演变特征分析。也关注深度学习在气象与降水预报中的创新应用。</subtitle><author><name>Xianpu Ji</name><email>xianpuji@hhu.edu.cn</email></author><entry><title type="html">GFS数据处理与可视化</title><link href="https://blissful-jasper.github.io/%E6%8A%80%E6%9C%AF/%E6%B0%94%E8%B1%A1%E6%95%B0%E6%8D%AE/2025/07/03/gfs-data-processing/" rel="alternate" type="text/html" title="GFS数据处理与可视化" /><published>2025-07-03T00:00:00+00:00</published><updated>2025-07-03T00:00:00+00:00</updated><id>https://blissful-jasper.github.io/%E6%8A%80%E6%9C%AF/%E6%B0%94%E8%B1%A1%E6%95%B0%E6%8D%AE/2025/07/03/gfs-data-processing</id><content type="html" xml:base="https://blissful-jasper.github.io/%E6%8A%80%E6%9C%AF/%E6%B0%94%E8%B1%A1%E6%95%B0%E6%8D%AE/2025/07/03/gfs-data-processing/"><![CDATA[<h1 id="gfs数据处理与可视化">GFS数据处理与可视化</h1>

<p>全球预报系统（GFS）是美国国家气象局运行的全球数值天气预报模型。本文介绍如何下载、处理和可视化GFS数据。</p>

<h2 id="gfs数据文件结构">GFS数据文件结构</h2>

<p>GFS数据文件通常按以下格式命名：</p>

<div class="file-table">
<table>
<thead>
<tr>
<th>文件名</th>
<th>日期</th>
<th>大小</th>
</tr>
</thead>
<tbody>
<tr>
<td class="file-name">gfs.t00z.pgrb2.1p00.f000</td>
<td class="file-date">17-Feb-2022 03:36</td>
<td class="file-size">40M</td>
</tr>
<tr>
<td class="file-name">gfs.t00z.pgrb2.1p00.f003</td>
<td class="file-date">17-Feb-2022 03:37</td>
<td class="file-size">43M</td>
</tr>
<tr>
<td class="file-name">gfs.t00z.pgrb2.1p00.f006</td>
<td class="file-date">17-Feb-2022 03:39</td>
<td class="file-size">43M</td>
</tr>
<tr>
<td class="file-name">gfs.t00z.pgrb2.1p00.f009</td>
<td class="file-date">17-Feb-2022 03:40</td>
<td class="file-size">43M</td>
</tr>
<tr>
<td class="file-name">gfs.t00z.pgrb2.1p00.f012</td>
<td class="file-date">17-Feb-2022 03:42</td>
<td class="file-size">43M</td>
</tr>
</tbody>
</table>
</div>

<h2 id="文件命名规则">文件命名规则</h2>

<p>GFS文件名包含以下信息：</p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">gfs</code>: 模型名称</li>
  <li><code class="language-plaintext highlighter-rouge">t00z</code>: 初始化时间（UTC）</li>
  <li><code class="language-plaintext highlighter-rouge">pgrb2</code>: 数据类型（pressure levels, grib2格式）</li>
  <li><code class="language-plaintext highlighter-rouge">1p00</code>: 分辨率（1.0度）</li>
  <li><code class="language-plaintext highlighter-rouge">f000</code>: 预报时效（小时）</li>
</ul>

<h2 id="python数据处理代码">Python数据处理代码</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">xarray</span> <span class="k">as</span> <span class="n">xr</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>
<span class="kn">import</span> <span class="nn">cartopy.crs</span> <span class="k">as</span> <span class="n">ccrs</span>
<span class="kn">import</span> <span class="nn">cartopy.feature</span> <span class="k">as</span> <span class="n">cfeature</span>

<span class="k">def</span> <span class="nf">download_gfs_data</span><span class="p">(</span><span class="n">date</span><span class="p">,</span> <span class="n">hour</span><span class="p">,</span> <span class="n">forecast_hour</span><span class="p">):</span>
    <span class="s">"""
    下载GFS数据
    
    Parameters:
    -----------
    date : str
        日期，格式为 'YYYYMMDD'
    hour : str
        初始化时间，格式为 '00', '06', '12', '18'
    forecast_hour : str
        预报时效，格式为 '000', '003', '006', etc.
    """</span>
    <span class="n">base_url</span> <span class="o">=</span> <span class="s">"https://nomads.ncep.noaa.gov/pub/data/nccf/com/gfs/prod/"</span>
    <span class="n">filename</span> <span class="o">=</span> <span class="sa">f</span><span class="s">"gfs.t</span><span class="si">{</span><span class="n">hour</span><span class="si">}</span><span class="s">z.pgrb2.1p00.f</span><span class="si">{</span><span class="n">forecast_hour</span><span class="si">}</span><span class="s">"</span>
    <span class="n">url</span> <span class="o">=</span> <span class="sa">f</span><span class="s">"</span><span class="si">{</span><span class="n">base_url</span><span class="si">}</span><span class="s">gfs.</span><span class="si">{</span><span class="n">date</span><span class="si">}</span><span class="s">/</span><span class="si">{</span><span class="n">hour</span><span class="si">}</span><span class="s">/</span><span class="si">{</span><span class="n">filename</span><span class="si">}</span><span class="s">"</span>
    
    <span class="k">print</span><span class="p">(</span><span class="sa">f</span><span class="s">"Downloading: </span><span class="si">{</span><span class="n">url</span><span class="si">}</span><span class="s">"</span><span class="p">)</span>
    <span class="k">return</span> <span class="n">url</span>

<span class="k">def</span> <span class="nf">process_gfs_data</span><span class="p">(</span><span class="n">filepath</span><span class="p">):</span>
    <span class="s">"""
    处理GFS数据文件
    """</span>
    <span class="c1"># 使用xarray读取GRIB2文件
</span>    <span class="n">ds</span> <span class="o">=</span> <span class="n">xr</span><span class="p">.</span><span class="n">open_dataset</span><span class="p">(</span><span class="n">filepath</span><span class="p">,</span> <span class="n">engine</span><span class="o">=</span><span class="s">'cfgrib'</span><span class="p">)</span>
    
    <span class="c1"># 选择特定变量
</span>    <span class="n">temperature</span> <span class="o">=</span> <span class="n">ds</span><span class="p">[</span><span class="s">'t'</span><span class="p">]</span>  <span class="c1"># 温度
</span>    <span class="n">pressure</span> <span class="o">=</span> <span class="n">ds</span><span class="p">[</span><span class="s">'sp'</span><span class="p">]</span>    <span class="c1"># 地面气压
</span>    
    <span class="k">return</span> <span class="n">temperature</span><span class="p">,</span> <span class="n">pressure</span>

<span class="k">def</span> <span class="nf">plot_temperature_map</span><span class="p">(</span><span class="n">temperature</span><span class="p">,</span> <span class="n">title</span><span class="o">=</span><span class="s">"Temperature"</span><span class="p">):</span>
    <span class="s">"""
    绘制温度分布图
    """</span>
    <span class="n">fig</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">12</span><span class="p">,</span> <span class="mi">8</span><span class="p">))</span>
    <span class="n">ax</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="n">axes</span><span class="p">(</span><span class="n">projection</span><span class="o">=</span><span class="n">ccrs</span><span class="p">.</span><span class="n">PlateCarree</span><span class="p">())</span>
    
    <span class="c1"># 添加地图要素
</span>    <span class="n">ax</span><span class="p">.</span><span class="n">add_feature</span><span class="p">(</span><span class="n">cfeature</span><span class="p">.</span><span class="n">COASTLINE</span><span class="p">)</span>
    <span class="n">ax</span><span class="p">.</span><span class="n">add_feature</span><span class="p">(</span><span class="n">cfeature</span><span class="p">.</span><span class="n">BORDERS</span><span class="p">)</span>
    <span class="n">ax</span><span class="p">.</span><span class="n">add_feature</span><span class="p">(</span><span class="n">cfeature</span><span class="p">.</span><span class="n">OCEAN</span><span class="p">,</span> <span class="n">alpha</span><span class="o">=</span><span class="mf">0.5</span><span class="p">)</span>
    <span class="n">ax</span><span class="p">.</span><span class="n">add_feature</span><span class="p">(</span><span class="n">cfeature</span><span class="p">.</span><span class="n">LAND</span><span class="p">,</span> <span class="n">alpha</span><span class="o">=</span><span class="mf">0.5</span><span class="p">)</span>
    
    <span class="c1"># 绘制温度等值线
</span>    <span class="n">contour</span> <span class="o">=</span> <span class="n">ax</span><span class="p">.</span><span class="n">contourf</span><span class="p">(</span>
        <span class="n">temperature</span><span class="p">.</span><span class="n">longitude</span><span class="p">,</span> 
        <span class="n">temperature</span><span class="p">.</span><span class="n">latitude</span><span class="p">,</span> 
        <span class="n">temperature</span> <span class="o">-</span> <span class="mf">273.15</span><span class="p">,</span>  <span class="c1"># 转换为摄氏度
</span>        <span class="n">levels</span><span class="o">=</span><span class="mi">20</span><span class="p">,</span>
        <span class="n">transform</span><span class="o">=</span><span class="n">ccrs</span><span class="p">.</span><span class="n">PlateCarree</span><span class="p">(),</span>
        <span class="n">cmap</span><span class="o">=</span><span class="s">'RdBu_r'</span>
    <span class="p">)</span>
    
    <span class="c1"># 添加色标
</span>    <span class="n">plt</span><span class="p">.</span><span class="n">colorbar</span><span class="p">(</span><span class="n">contour</span><span class="p">,</span> <span class="n">ax</span><span class="o">=</span><span class="n">ax</span><span class="p">,</span> <span class="n">label</span><span class="o">=</span><span class="s">'Temperature (°C)'</span><span class="p">)</span>
    
    <span class="c1"># 设置标题和网格
</span>    <span class="n">ax</span><span class="p">.</span><span class="n">set_title</span><span class="p">(</span><span class="n">title</span><span class="p">,</span> <span class="n">fontsize</span><span class="o">=</span><span class="mi">14</span><span class="p">,</span> <span class="n">fontweight</span><span class="o">=</span><span class="s">'bold'</span><span class="p">)</span>
    <span class="n">ax</span><span class="p">.</span><span class="n">gridlines</span><span class="p">(</span><span class="n">draw_labels</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
    
    <span class="n">plt</span><span class="p">.</span><span class="n">tight_layout</span><span class="p">()</span>
    <span class="n">plt</span><span class="p">.</span><span class="n">show</span><span class="p">()</span>

<span class="c1"># 使用示例
</span><span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">"__main__"</span><span class="p">:</span>
    <span class="c1"># 下载数据
</span>    <span class="n">date</span> <span class="o">=</span> <span class="s">"20220217"</span>
    <span class="n">hour</span> <span class="o">=</span> <span class="s">"00"</span>
    <span class="n">forecast_hour</span> <span class="o">=</span> <span class="s">"000"</span>
    
    <span class="n">url</span> <span class="o">=</span> <span class="n">download_gfs_data</span><span class="p">(</span><span class="n">date</span><span class="p">,</span> <span class="n">hour</span><span class="p">,</span> <span class="n">forecast_hour</span><span class="p">)</span>
    
    <span class="c1"># 处理数据（假设已下载到本地）
</span>    <span class="n">filepath</span> <span class="o">=</span> <span class="sa">f</span><span class="s">"gfs.t</span><span class="si">{</span><span class="n">hour</span><span class="si">}</span><span class="s">z.pgrb2.1p00.f</span><span class="si">{</span><span class="n">forecast_hour</span><span class="si">}</span><span class="s">"</span>
    <span class="n">temperature</span><span class="p">,</span> <span class="n">pressure</span> <span class="o">=</span> <span class="n">process_gfs_data</span><span class="p">(</span><span class="n">filepath</span><span class="p">)</span>
    
    <span class="c1"># 可视化
</span>    <span class="n">plot_temperature_map</span><span class="p">(</span><span class="n">temperature</span><span class="p">,</span> <span class="s">"GFS Temperature Analysis"</span><span class="p">)</span>
</code></pre></div></div>

<h2 id="批量处理脚本">批量处理脚本</h2>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">#!/bin/bash</span>

<span class="c"># 批量下载GFS数据</span>
<span class="nv">DATE</span><span class="o">=</span><span class="s2">"20220217"</span>
<span class="nv">HOUR</span><span class="o">=</span><span class="s2">"00"</span>
<span class="nv">BASE_URL</span><span class="o">=</span><span class="s2">"https://nomads.ncep.noaa.gov/pub/data/nccf/com/gfs/prod/"</span>

<span class="c"># 下载前24小时的数据（每3小时一个文件）</span>
<span class="k">for </span>i <span class="k">in</span> <span class="o">{</span>0..24..3<span class="o">}</span><span class="p">;</span> <span class="k">do
    </span><span class="nv">FHOUR</span><span class="o">=</span><span class="si">$(</span><span class="nb">printf</span> <span class="s2">"%03d"</span> <span class="nv">$i</span><span class="si">)</span>
    <span class="nv">FILENAME</span><span class="o">=</span><span class="s2">"gfs.t</span><span class="k">${</span><span class="nv">HOUR</span><span class="k">}</span><span class="s2">z.pgrb2.1p00.f</span><span class="k">${</span><span class="nv">FHOUR</span><span class="k">}</span><span class="s2">"</span>
    <span class="nv">URL</span><span class="o">=</span><span class="s2">"</span><span class="k">${</span><span class="nv">BASE_URL</span><span class="k">}</span><span class="s2">gfs.</span><span class="k">${</span><span class="nv">DATE</span><span class="k">}</span><span class="s2">/</span><span class="k">${</span><span class="nv">HOUR</span><span class="k">}</span><span class="s2">/</span><span class="k">${</span><span class="nv">FILENAME</span><span class="k">}</span><span class="s2">"</span>
    
    <span class="nb">echo</span> <span class="s2">"Downloading </span><span class="nv">$FILENAME</span><span class="s2">..."</span>
    wget <span class="nt">-O</span> <span class="s2">"</span><span class="nv">$FILENAME</span><span class="s2">"</span> <span class="s2">"</span><span class="nv">$URL</span><span class="s2">"</span>
    
    <span class="k">if</span> <span class="o">[</span> <span class="nv">$?</span> <span class="nt">-eq</span> 0 <span class="o">]</span><span class="p">;</span> <span class="k">then
        </span><span class="nb">echo</span> <span class="s2">"Successfully downloaded </span><span class="nv">$FILENAME</span><span class="s2">"</span>
    <span class="k">else
        </span><span class="nb">echo</span> <span class="s2">"Failed to download </span><span class="nv">$FILENAME</span><span class="s2">"</span>
    <span class="k">fi
done

</span><span class="nb">echo</span> <span class="s2">"Download complete!"</span>
</code></pre></div></div>

<h2 id="数据分析技巧">数据分析技巧</h2>

<h3 id="1-数据质量检查">1. 数据质量检查</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">check_data_quality</span><span class="p">(</span><span class="n">ds</span><span class="p">):</span>
    <span class="s">"""
    检查数据质量
    """</span>
    <span class="c1"># 检查缺失值
</span>    <span class="n">missing_values</span> <span class="o">=</span> <span class="n">ds</span><span class="p">.</span><span class="n">isnull</span><span class="p">().</span><span class="nb">sum</span><span class="p">()</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"Missing values:"</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="n">missing_values</span><span class="p">)</span>
    
    <span class="c1"># 检查数据范围
</span>    <span class="k">print</span><span class="p">(</span><span class="s">"</span><span class="se">\n</span><span class="s">Data ranges:"</span><span class="p">)</span>
    <span class="k">for</span> <span class="n">var</span> <span class="ow">in</span> <span class="n">ds</span><span class="p">.</span><span class="n">data_vars</span><span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="sa">f</span><span class="s">"</span><span class="si">{</span><span class="n">var</span><span class="si">}</span><span class="s">: </span><span class="si">{</span><span class="n">ds</span><span class="p">[</span><span class="n">var</span><span class="p">].</span><span class="nb">min</span><span class="p">().</span><span class="n">values</span><span class="si">:</span><span class="p">.</span><span class="mi">2</span><span class="n">f</span><span class="si">}</span><span class="s"> to </span><span class="si">{</span><span class="n">ds</span><span class="p">[</span><span class="n">var</span><span class="p">].</span><span class="nb">max</span><span class="p">().</span><span class="n">values</span><span class="si">:</span><span class="p">.</span><span class="mi">2</span><span class="n">f</span><span class="si">}</span><span class="s">"</span><span class="p">)</span>
    
    <span class="c1"># 检查坐标
</span>    <span class="k">print</span><span class="p">(</span><span class="sa">f</span><span class="s">"</span><span class="se">\n</span><span class="s">Latitude range: </span><span class="si">{</span><span class="n">ds</span><span class="p">.</span><span class="n">latitude</span><span class="p">.</span><span class="nb">min</span><span class="p">().</span><span class="n">values</span><span class="si">:</span><span class="p">.</span><span class="mi">2</span><span class="n">f</span><span class="si">}</span><span class="s"> to </span><span class="si">{</span><span class="n">ds</span><span class="p">.</span><span class="n">latitude</span><span class="p">.</span><span class="nb">max</span><span class="p">().</span><span class="n">values</span><span class="si">:</span><span class="p">.</span><span class="mi">2</span><span class="n">f</span><span class="si">}</span><span class="s">"</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="sa">f</span><span class="s">"Longitude range: </span><span class="si">{</span><span class="n">ds</span><span class="p">.</span><span class="n">longitude</span><span class="p">.</span><span class="nb">min</span><span class="p">().</span><span class="n">values</span><span class="si">:</span><span class="p">.</span><span class="mi">2</span><span class="n">f</span><span class="si">}</span><span class="s"> to </span><span class="si">{</span><span class="n">ds</span><span class="p">.</span><span class="n">longitude</span><span class="p">.</span><span class="nb">max</span><span class="p">().</span><span class="n">values</span><span class="si">:</span><span class="p">.</span><span class="mi">2</span><span class="n">f</span><span class="si">}</span><span class="s">"</span><span class="p">)</span>
</code></pre></div></div>

<h3 id="2-数据插值">2. 数据插值</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">interpolate_to_grid</span><span class="p">(</span><span class="n">ds</span><span class="p">,</span> <span class="n">target_resolution</span><span class="o">=</span><span class="mf">0.5</span><span class="p">):</span>
    <span class="s">"""
    将数据插值到指定分辨率
    """</span>
    <span class="c1"># 创建目标网格
</span>    <span class="n">new_lat</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">arange</span><span class="p">(</span><span class="o">-</span><span class="mi">90</span><span class="p">,</span> <span class="mf">90.1</span><span class="p">,</span> <span class="n">target_resolution</span><span class="p">)</span>
    <span class="n">new_lon</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">arange</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">360</span><span class="p">,</span> <span class="n">target_resolution</span><span class="p">)</span>
    
    <span class="c1"># 插值
</span>    <span class="n">ds_interp</span> <span class="o">=</span> <span class="n">ds</span><span class="p">.</span><span class="n">interp</span><span class="p">(</span><span class="n">latitude</span><span class="o">=</span><span class="n">new_lat</span><span class="p">,</span> <span class="n">longitude</span><span class="o">=</span><span class="n">new_lon</span><span class="p">)</span>
    
    <span class="k">return</span> <span class="n">ds_interp</span>
</code></pre></div></div>

<h2 id="总结">总结</h2>

<p>GFS数据是气象研究和预报的重要数据源。通过合适的处理和可视化方法，可以有效地分析和展示气象信息。主要步骤包括：</p>

<ol>
  <li><strong>数据下载</strong>：从NOAA服务器获取数据</li>
  <li><strong>数据处理</strong>：使用xarray等工具读取和处理GRIB2文件</li>
  <li><strong>质量控制</strong>：检查数据完整性和合理性</li>
  <li><strong>可视化</strong>：制作地图和图表展示结果</li>
</ol>

<p>通过Python和相关库的组合使用，可以构建完整的GFS数据处理工作流程。</p>

<hr />

<p><em>本文介绍了GFS数据的基本处理方法，更多高级应用请参考相关文档和教程。</em></p>]]></content><author><name>Xianpu Ji</name><email>xianpuji@hhu.edu.cn</email></author><category term="技术" /><category term="气象数据" /><category term="GFS" /><category term="数据处理" /><category term="可视化" /><category term="气象" /><summary type="html"><![CDATA[GFS数据处理与可视化]]></summary></entry><entry><title type="html">深度学习在气象预报中的应用</title><link href="https://blissful-jasper.github.io/research/meteorology/2025/07/01/deep-learning-weather-forecast/" rel="alternate" type="text/html" title="深度学习在气象预报中的应用" /><published>2025-07-01T00:00:00+00:00</published><updated>2025-07-01T00:00:00+00:00</updated><id>https://blissful-jasper.github.io/research/meteorology/2025/07/01/deep-learning-weather-forecast</id><content type="html" xml:base="https://blissful-jasper.github.io/research/meteorology/2025/07/01/deep-learning-weather-forecast/"><![CDATA[<h1 id="深度学习在气象预报中的应用">深度学习在气象预报中的应用</h1>

<p>随着人工智能技术的快速发展，深度学习在气象预报领域的应用越来越广泛。本文将介绍深度学习在气象预报中的几个重要应用方向。</p>

<h2 id="1-数值天气预报模型的改进">1. 数值天气预报模型的改进</h2>

<p>深度学习可以用于改进传统的数值天气预报模型：</p>

<ul>
  <li><strong>参数化方案优化</strong>：利用深度学习优化云物理、边界层等参数化方案</li>
  <li><strong>模型偏差修正</strong>：通过神经网络修正模型系统性偏差</li>
  <li><strong>多尺度耦合</strong>：改进不同尺度过程的耦合机制</li>
</ul>

<h2 id="2-卫星遥感数据处理">2. 卫星遥感数据处理</h2>

<p>卫星遥感数据是气象预报的重要数据源：</p>

<ul>
  <li><strong>云识别与分类</strong>：利用深度学习自动识别和分类不同类型的云</li>
  <li><strong>降水估计</strong>：基于卫星图像估计降水强度和分布</li>
  <li><strong>大气参数反演</strong>：从卫星观测数据反演大气温度、湿度等参数</li>
</ul>

<h2 id="3-极端天气事件预测">3. 极端天气事件预测</h2>

<p>深度学习在极端天气预测中显示出巨大潜力：</p>

<ul>
  <li><strong>台风路径预测</strong>：利用历史数据训练模型预测台风路径</li>
  <li><strong>强对流天气识别</strong>：识别和预测雷暴、冰雹等强对流天气</li>
  <li><strong>洪水预报</strong>：结合气象和水文数据进行洪水预报</li>
</ul>

<h2 id="4-技术挑战与发展方向">4. 技术挑战与发展方向</h2>

<h3 id="主要挑战">主要挑战</h3>

<ol>
  <li><strong>数据质量和数量</strong>：气象数据的时空分辨率和质量仍需提高</li>
  <li><strong>物理一致性</strong>：如何保证深度学习模型的物理合理性</li>
  <li><strong>可解释性</strong>：提高模型的可解释性，便于业务应用</li>
  <li><strong>计算资源</strong>：大规模深度学习模型的计算需求</li>
</ol>

<h3 id="发展方向">发展方向</h3>

<ol>
  <li><strong>物理约束的深度学习</strong>：将物理定律融入深度学习模型</li>
  <li><strong>多模态数据融合</strong>：整合多源观测数据提高预报精度</li>
  <li><strong>自适应学习</strong>：开发能够自适应不同地区和季节的模型</li>
  <li><strong>实时业务应用</strong>：将研究成果转化为实际的业务预报系统</li>
</ol>

<h2 id="5-实际应用案例">5. 实际应用案例</h2>

<h3 id="案例1欧洲中期天气预报中心ecmwf">案例1：欧洲中期天气预报中心(ECMWF)</h3>

<p>ECMWF正在探索使用深度学习技术改进其全球数值天气预报模型，特别是在云微物理参数化方面取得了显著进展。</p>

<h3 id="案例2google的天气预报模型">案例2：Google的天气预报模型</h3>

<p>Google开发的MetNet模型使用深度学习技术，在降水预报方面表现出色，特别是在短期预报(0-12小时)方面。</p>

<h3 id="案例3中国气象局的应用">案例3：中国气象局的应用</h3>

<p>中国气象局在台风路径预测、强对流天气识别等方面积极应用深度学习技术，取得了良好的效果。</p>

<h2 id="6-未来展望">6. 未来展望</h2>

<p>深度学习在气象预报中的应用前景广阔：</p>

<ul>
  <li><strong>预报精度提升</strong>：通过更先进的深度学习模型提高预报精度</li>
  <li><strong>预报时效延长</strong>：扩展有效预报时间范围</li>
  <li><strong>个性化预报</strong>：为不同用户提供个性化的气象服务</li>
  <li><strong>智能化决策</strong>：辅助气象预报员做出更准确的预报决策</li>
</ul>

<h2 id="结论">结论</h2>

<p>深度学习技术为气象预报带来了新的机遇，但同时也面临着诸多挑战。未来需要在保持物理一致性的同时，充分发挥深度学习的优势，推动气象预报事业的发展。</p>

<p>作为一名专注于热带气象和深度学习应用的研究者，我将继续关注这一领域的最新发展，为提高气象预报精度贡献自己的力量。</p>

<hr />

<p><em>本文基于最新的研究进展和实际应用案例编写，如有任何问题或建议，欢迎与我交流讨论。</em></p>]]></content><author><name>Xianpu Ji</name></author><category term="research" /><category term="meteorology" /><category term="深度学习" /><category term="气象预报" /><category term="机器学习" /><category term="科研" /><summary type="html"><![CDATA[深度学习在气象预报中的应用]]></summary></entry><entry><title type="html">MRG波与热带降水的关系</title><link href="https://blissful-jasper.github.io/%E7%A7%91%E7%A0%94/%E5%A4%A7%E6%B0%94%E5%8A%A8%E5%8A%9B%E5%AD%A6/2025/06/29/MRG-waves/" rel="alternate" type="text/html" title="MRG波与热带降水的关系" /><published>2025-06-29T00:00:00+00:00</published><updated>2025-06-29T00:00:00+00:00</updated><id>https://blissful-jasper.github.io/%E7%A7%91%E7%A0%94/%E5%A4%A7%E6%B0%94%E5%8A%A8%E5%8A%9B%E5%AD%A6/2025/06/29/MRG-waves</id><content type="html" xml:base="https://blissful-jasper.github.io/%E7%A7%91%E7%A0%94/%E5%A4%A7%E6%B0%94%E5%8A%A8%E5%8A%9B%E5%AD%A6/2025/06/29/MRG-waves/"><![CDATA[<h1 id="mrg波与热带降水的关系">MRG波与热带降水的关系</h1>

<p>Mixed Rossby-Gravity（MRG）波是热带大气中一种重要的波动现象，对热带降水的时空分布具有重要影响。本文将探讨MRG波的基本特征及其与热带降水的相互关系。</p>

<h2 id="mrg波的基本特征">MRG波的基本特征</h2>

<h3 id="1-波动结构">1. 波动结构</h3>

<p>MRG波是一种混合型波动，具有以下特征：</p>

<ul>
  <li><strong>水平结构</strong>：在赤道附近具有最大振幅</li>
  <li><strong>垂直结构</strong>：呈现斜压结构</li>
  <li><strong>传播特性</strong>：向西传播，传播速度约为15-20 m/s</li>
  <li><strong>周期特性</strong>：周期约为3-5天</li>
</ul>

<h3 id="2-动力学机制">2. 动力学机制</h3>

<p>MRG波的产生和维持机制包括：</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>

<span class="c1"># MRG波的色散关系
</span><span class="k">def</span> <span class="nf">mrg_dispersion</span><span class="p">(</span><span class="n">k</span><span class="p">,</span> <span class="n">beta</span><span class="p">,</span> <span class="n">N</span><span class="p">,</span> <span class="n">H</span><span class="p">):</span>
    <span class="s">"""
    计算MRG波的色散关系
    k: 波数
    beta: 科里奥利参数的经向梯度
    N: 浮力频率
    H: 等效深度
    """</span>
    <span class="n">c</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">sqrt</span><span class="p">(</span><span class="n">beta</span> <span class="o">*</span> <span class="n">H</span><span class="p">)</span>  <span class="c1"># 重力波速度
</span>    <span class="n">omega</span> <span class="o">=</span> <span class="o">-</span><span class="n">k</span> <span class="o">*</span> <span class="n">c</span> <span class="o">/</span> <span class="p">(</span><span class="mi">1</span> <span class="o">+</span> <span class="n">k</span><span class="o">**</span><span class="mi">2</span> <span class="o">*</span> <span class="n">H</span> <span class="o">/</span> <span class="n">beta</span><span class="p">)</span>
    <span class="k">return</span> <span class="n">omega</span>

<span class="c1"># 绘制色散关系图
</span><span class="n">k</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">linspace</span><span class="p">(</span><span class="o">-</span><span class="mf">0.1</span><span class="p">,</span> <span class="mf">0.1</span><span class="p">,</span> <span class="mi">100</span><span class="p">)</span>
<span class="n">beta</span> <span class="o">=</span> <span class="mf">2.3e-11</span>  <span class="c1"># m^-1 s^-1
</span><span class="n">N</span> <span class="o">=</span> <span class="mf">0.02</span>  <span class="c1"># s^-1
</span><span class="n">H</span> <span class="o">=</span> <span class="mi">50</span>  <span class="c1"># m
</span>
<span class="n">omega</span> <span class="o">=</span> <span class="n">mrg_dispersion</span><span class="p">(</span><span class="n">k</span><span class="p">,</span> <span class="n">beta</span><span class="p">,</span> <span class="n">N</span><span class="p">,</span> <span class="n">H</span><span class="p">)</span>

<span class="n">plt</span><span class="p">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="mi">6</span><span class="p">))</span>
<span class="n">plt</span><span class="p">.</span><span class="n">plot</span><span class="p">(</span><span class="n">k</span><span class="p">,</span> <span class="n">omega</span><span class="p">,</span> <span class="s">'b-'</span><span class="p">,</span> <span class="n">linewidth</span><span class="o">=</span><span class="mi">2</span><span class="p">,</span> <span class="n">label</span><span class="o">=</span><span class="s">'MRG波'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">xlabel</span><span class="p">(</span><span class="s">'波数 k (m^-1)'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">ylabel</span><span class="p">(</span><span class="s">'频率 ω (s^-1)'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">title</span><span class="p">(</span><span class="s">'MRG波的色散关系'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">grid</span><span class="p">(</span><span class="bp">True</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">legend</span><span class="p">()</span>
<span class="n">plt</span><span class="p">.</span><span class="n">show</span><span class="p">()</span>
</code></pre></div></div>

<h2 id="mrg波与对流的相互作用">MRG波与对流的相互作用</h2>

<h3 id="1-对流触发机制">1. 对流触发机制</h3>

<p>MRG波通过以下机制影响对流活动：</p>

<ul>
  <li><strong>低层辐合</strong>：MRG波的低层辐合有利于对流的触发</li>
  <li><strong>垂直风切变</strong>：影响对流系统的结构和强度</li>
  <li><strong>水汽输送</strong>：调节大气中的水汽分布</li>
</ul>

<h3 id="2-对流反馈效应">2. 对流反馈效应</h3>

<p>对流活动也会反过来影响MRG波：</p>

<ul>
  <li><strong>潜热释放</strong>：对流释放的潜热为MRG波提供能量</li>
  <li><strong>动量输送</strong>：对流动量输送影响波动的传播</li>
  <li><strong>波-对流耦合</strong>：形成复杂的相互作用</li>
</ul>

<h2 id="观测分析方法">观测分析方法</h2>

<h3 id="1-滤波分析">1. 滤波分析</h3>

<p>使用时空滤波方法提取MRG波信号：</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">from</span> <span class="nn">scipy</span> <span class="kn">import</span> <span class="n">signal</span>

<span class="k">def</span> <span class="nf">extract_mrg_signal</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> <span class="n">lat</span><span class="p">,</span> <span class="n">lon</span><span class="p">,</span> <span class="n">time</span><span class="p">):</span>
    <span class="s">"""
    提取MRG波信号
    """</span>
    <span class="c1"># 空间滤波
</span>    <span class="n">lat_filter</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">where</span><span class="p">((</span><span class="n">lat</span> <span class="o">&gt;=</span> <span class="o">-</span><span class="mi">15</span><span class="p">)</span> <span class="o">&amp;</span> <span class="p">(</span><span class="n">lat</span> <span class="o">&lt;=</span> <span class="mi">15</span><span class="p">))[</span><span class="mi">0</span><span class="p">]</span>
    <span class="n">filtered_data</span> <span class="o">=</span> <span class="n">data</span><span class="p">[</span><span class="n">lat_filter</span><span class="p">,</span> <span class="p">:,</span> <span class="p">:]</span>
    
    <span class="c1"># 时间滤波
</span>    <span class="c1"># MRG波周期约为3-5天
</span>    <span class="n">fs</span> <span class="o">=</span> <span class="mf">1.0</span>  <span class="c1"># 每天一个数据点
</span>    <span class="n">lowcut</span> <span class="o">=</span> <span class="mf">1.0</span><span class="o">/</span><span class="mf">5.0</span>  <span class="c1"># 5天
</span>    <span class="n">highcut</span> <span class="o">=</span> <span class="mf">1.0</span><span class="o">/</span><span class="mf">3.0</span>  <span class="c1"># 3天
</span>    
    <span class="n">filtered_signal</span> <span class="o">=</span> <span class="n">bandpass_filter</span><span class="p">(</span><span class="n">filtered_data</span><span class="p">,</span> <span class="n">lowcut</span><span class="p">,</span> <span class="n">highcut</span><span class="p">,</span> <span class="n">fs</span><span class="p">)</span>
    
    <span class="k">return</span> <span class="n">filtered_signal</span>

<span class="k">def</span> <span class="nf">bandpass_filter</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> <span class="n">lowcut</span><span class="p">,</span> <span class="n">highcut</span><span class="p">,</span> <span class="n">fs</span><span class="p">,</span> <span class="n">order</span><span class="o">=</span><span class="mi">5</span><span class="p">):</span>
    <span class="s">"""
    带通滤波器
    """</span>
    <span class="n">nyquist</span> <span class="o">=</span> <span class="mf">0.5</span> <span class="o">*</span> <span class="n">fs</span>
    <span class="n">low</span> <span class="o">=</span> <span class="n">lowcut</span> <span class="o">/</span> <span class="n">nyquist</span>
    <span class="n">high</span> <span class="o">=</span> <span class="n">highcut</span> <span class="o">/</span> <span class="n">nyquist</span>
    
    <span class="n">b</span><span class="p">,</span> <span class="n">a</span> <span class="o">=</span> <span class="n">signal</span><span class="p">.</span><span class="n">butter</span><span class="p">(</span><span class="n">order</span><span class="p">,</span> <span class="p">[</span><span class="n">low</span><span class="p">,</span> <span class="n">high</span><span class="p">],</span> <span class="n">btype</span><span class="o">=</span><span class="s">'band'</span><span class="p">)</span>
    <span class="n">filtered_data</span> <span class="o">=</span> <span class="n">signal</span><span class="p">.</span><span class="n">filtfilt</span><span class="p">(</span><span class="n">b</span><span class="p">,</span> <span class="n">a</span><span class="p">,</span> <span class="n">data</span><span class="p">,</span> <span class="n">axis</span><span class="o">=-</span><span class="mi">1</span><span class="p">)</span>
    
    <span class="k">return</span> <span class="n">filtered_data</span>
</code></pre></div></div>

<h3 id="2-波数-频率分析">2. 波数-频率分析</h3>

<p>通过波数-频率谱分析识别MRG波：</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">wavenumber_frequency_analysis</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> <span class="n">lat</span><span class="p">,</span> <span class="n">lon</span><span class="p">,</span> <span class="n">time</span><span class="p">):</span>
    <span class="s">"""
    波数-频率分析
    """</span>
    <span class="c1"># 时空FFT
</span>    <span class="n">fft_data</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">fft</span><span class="p">.</span><span class="n">fft2</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> <span class="n">axes</span><span class="o">=</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">))</span>
    
    <span class="c1"># 计算功率谱
</span>    <span class="n">power_spectrum</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nb">abs</span><span class="p">(</span><span class="n">fft_data</span><span class="p">)</span><span class="o">**</span><span class="mi">2</span>
    
    <span class="c1"># 计算频率和波数
</span>    <span class="n">freqs</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">fft</span><span class="p">.</span><span class="n">fftfreq</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">time</span><span class="p">))</span>
    <span class="n">wavenumbers</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">fft</span><span class="p">.</span><span class="n">fftfreq</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">lon</span><span class="p">))</span>
    
    <span class="k">return</span> <span class="n">power_spectrum</span><span class="p">,</span> <span class="n">freqs</span><span class="p">,</span> <span class="n">wavenumbers</span>

<span class="k">def</span> <span class="nf">plot_dispersion_diagram</span><span class="p">(</span><span class="n">power_spectrum</span><span class="p">,</span> <span class="n">freqs</span><span class="p">,</span> <span class="n">wavenumbers</span><span class="p">):</span>
    <span class="s">"""
    绘制色散图
    """</span>
    <span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>
    
    <span class="n">plt</span><span class="p">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">12</span><span class="p">,</span> <span class="mi">8</span><span class="p">))</span>
    <span class="n">plt</span><span class="p">.</span><span class="n">contourf</span><span class="p">(</span><span class="n">wavenumbers</span><span class="p">,</span> <span class="n">freqs</span><span class="p">,</span> <span class="n">power_spectrum</span><span class="p">,</span> <span class="n">levels</span><span class="o">=</span><span class="mi">50</span><span class="p">,</span> <span class="n">cmap</span><span class="o">=</span><span class="s">'viridis'</span><span class="p">)</span>
    <span class="n">plt</span><span class="p">.</span><span class="n">colorbar</span><span class="p">(</span><span class="n">label</span><span class="o">=</span><span class="s">'Power'</span><span class="p">)</span>
    <span class="n">plt</span><span class="p">.</span><span class="n">xlabel</span><span class="p">(</span><span class="s">'Wavenumber'</span><span class="p">)</span>
    <span class="n">plt</span><span class="p">.</span><span class="n">ylabel</span><span class="p">(</span><span class="s">'Frequency'</span><span class="p">)</span>
    <span class="n">plt</span><span class="p">.</span><span class="n">title</span><span class="p">(</span><span class="s">'Wavenumber-Frequency Spectrum'</span><span class="p">)</span>
    
    <span class="c1"># 叠加理论色散曲线
</span>    <span class="n">k_theory</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">linspace</span><span class="p">(</span><span class="o">-</span><span class="mf">0.1</span><span class="p">,</span> <span class="mf">0.1</span><span class="p">,</span> <span class="mi">100</span><span class="p">)</span>
    <span class="n">omega_theory</span> <span class="o">=</span> <span class="n">mrg_dispersion</span><span class="p">(</span><span class="n">k_theory</span><span class="p">,</span> <span class="mf">2.3e-11</span><span class="p">,</span> <span class="mf">0.02</span><span class="p">,</span> <span class="mi">50</span><span class="p">)</span>
    <span class="n">plt</span><span class="p">.</span><span class="n">plot</span><span class="p">(</span><span class="n">k_theory</span><span class="p">,</span> <span class="n">omega_theory</span><span class="p">,</span> <span class="s">'r--'</span><span class="p">,</span> <span class="n">linewidth</span><span class="o">=</span><span class="mi">2</span><span class="p">,</span> <span class="n">label</span><span class="o">=</span><span class="s">'MRG Theory'</span><span class="p">)</span>
    <span class="n">plt</span><span class="p">.</span><span class="n">legend</span><span class="p">()</span>
    <span class="n">plt</span><span class="p">.</span><span class="n">show</span><span class="p">()</span>
</code></pre></div></div>

<h2 id="降水影响机制">降水影响机制</h2>

<h3 id="1-直接影响">1. 直接影响</h3>

<p>MRG波直接影响降水的机制：</p>

<ul>
  <li><strong>垂直运动</strong>：MRG波引起的垂直运动直接影响降水</li>
  <li><strong>水汽辐合</strong>：低层水汽辐合促进降水形成</li>
  <li><strong>不稳定条件</strong>：改变大气稳定性条件</li>
</ul>

<h3 id="2-间接影响">2. 间接影响</h3>

<p>MRG波通过其他过程间接影响降水：</p>

<ul>
  <li><strong>与其他波动耦合</strong>：与Kelvin波、惯性重力波等耦合</li>
  <li><strong>调制对流系统</strong>：影响中尺度对流系统的发展</li>
  <li><strong>改变环境条件</strong>：改变温度、湿度、风场等环境条件</li>
</ul>

<h2 id="数值模拟研究">数值模拟研究</h2>

<h3 id="1-全球模式">1. 全球模式</h3>

<p>使用全球大气模式研究MRG波：</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">analyze_gcm_mrg</span><span class="p">(</span><span class="n">model_data</span><span class="p">):</span>
    <span class="s">"""
    分析全球模式中的MRG波
    """</span>
    <span class="c1"># 提取关键变量
</span>    <span class="n">u_wind</span> <span class="o">=</span> <span class="n">model_data</span><span class="p">[</span><span class="s">'u'</span><span class="p">]</span>  <span class="c1"># 纬向风
</span>    <span class="n">v_wind</span> <span class="o">=</span> <span class="n">model_data</span><span class="p">[</span><span class="s">'v'</span><span class="p">]</span>  <span class="c1"># 经向风
</span>    <span class="n">omega</span> <span class="o">=</span> <span class="n">model_data</span><span class="p">[</span><span class="s">'omega'</span><span class="p">]</span>  <span class="c1"># 垂直速度
</span>    <span class="n">precip</span> <span class="o">=</span> <span class="n">model_data</span><span class="p">[</span><span class="s">'precip'</span><span class="p">]</span>  <span class="c1"># 降水
</span>    
    <span class="c1"># 计算MRG波指数
</span>    <span class="n">mrg_index</span> <span class="o">=</span> <span class="n">calculate_mrg_index</span><span class="p">(</span><span class="n">u_wind</span><span class="p">,</span> <span class="n">v_wind</span><span class="p">,</span> <span class="n">omega</span><span class="p">)</span>
    
    <span class="c1"># 分析MRG波与降水的关系
</span>    <span class="n">correlation</span> <span class="o">=</span> <span class="n">calculate_correlation</span><span class="p">(</span><span class="n">mrg_index</span><span class="p">,</span> <span class="n">precip</span><span class="p">)</span>
    
    <span class="k">return</span> <span class="n">mrg_index</span><span class="p">,</span> <span class="n">correlation</span>

<span class="k">def</span> <span class="nf">calculate_mrg_index</span><span class="p">(</span><span class="n">u</span><span class="p">,</span> <span class="n">v</span><span class="p">,</span> <span class="n">omega</span><span class="p">):</span>
    <span class="s">"""
    计算MRG波指数
    """</span>
    <span class="c1"># 赤道带平均
</span>    <span class="n">eq_u</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">mean</span><span class="p">(</span><span class="n">u</span><span class="p">[(</span><span class="n">lat</span> <span class="o">&gt;=</span> <span class="o">-</span><span class="mi">5</span><span class="p">)</span> <span class="o">&amp;</span> <span class="p">(</span><span class="n">lat</span> <span class="o">&lt;=</span> <span class="mi">5</span><span class="p">),</span> <span class="p">:,</span> <span class="p">:],</span> <span class="n">axis</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>
    <span class="n">eq_v</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">mean</span><span class="p">(</span><span class="n">v</span><span class="p">[(</span><span class="n">lat</span> <span class="o">&gt;=</span> <span class="o">-</span><span class="mi">5</span><span class="p">)</span> <span class="o">&amp;</span> <span class="p">(</span><span class="n">lat</span> <span class="o">&lt;=</span> <span class="mi">5</span><span class="p">),</span> <span class="p">:,</span> <span class="p">:],</span> <span class="n">axis</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>
    <span class="n">eq_omega</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">mean</span><span class="p">(</span><span class="n">omega</span><span class="p">[(</span><span class="n">lat</span> <span class="o">&gt;=</span> <span class="o">-</span><span class="mi">5</span><span class="p">)</span> <span class="o">&amp;</span> <span class="p">(</span><span class="n">lat</span> <span class="o">&lt;=</span> <span class="mi">5</span><span class="p">),</span> <span class="p">:,</span> <span class="p">:],</span> <span class="n">axis</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>
    
    <span class="c1"># 计算相对涡度
</span>    <span class="n">vorticity</span> <span class="o">=</span> <span class="n">calculate_vorticity</span><span class="p">(</span><span class="n">eq_u</span><span class="p">,</span> <span class="n">eq_v</span><span class="p">)</span>
    
    <span class="c1"># 组合指数
</span>    <span class="n">mrg_index</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">sqrt</span><span class="p">(</span><span class="n">vorticity</span><span class="o">**</span><span class="mi">2</span> <span class="o">+</span> <span class="n">eq_omega</span><span class="o">**</span><span class="mi">2</span><span class="p">)</span>
    
    <span class="k">return</span> <span class="n">mrg_index</span>
</code></pre></div></div>

<h3 id="2-统计预报模型">2. 统计预报模型</h3>

<p>建立基于MRG波的统计预报模型：</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="nn">sklearn.ensemble</span> <span class="kn">import</span> <span class="n">RandomForestRegressor</span>
<span class="kn">from</span> <span class="nn">sklearn.model_selection</span> <span class="kn">import</span> <span class="n">train_test_split</span>

<span class="k">def</span> <span class="nf">build_mrg_precip_model</span><span class="p">(</span><span class="n">features</span><span class="p">,</span> <span class="n">precipitation</span><span class="p">):</span>
    <span class="s">"""
    构建MRG波-降水统计模型
    """</span>
    <span class="c1"># 特征工程
</span>    <span class="n">X</span> <span class="o">=</span> <span class="n">prepare_features</span><span class="p">(</span><span class="n">features</span><span class="p">)</span>
    <span class="n">y</span> <span class="o">=</span> <span class="n">precipitation</span>
    
    <span class="c1"># 划分训练测试集
</span>    <span class="n">X_train</span><span class="p">,</span> <span class="n">X_test</span><span class="p">,</span> <span class="n">y_train</span><span class="p">,</span> <span class="n">y_test</span> <span class="o">=</span> <span class="n">train_test_split</span><span class="p">(</span>
        <span class="n">X</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">test_size</span><span class="o">=</span><span class="mf">0.2</span><span class="p">,</span> <span class="n">random_state</span><span class="o">=</span><span class="mi">42</span>
    <span class="p">)</span>
    
    <span class="c1"># 训练随机森林模型
</span>    <span class="n">model</span> <span class="o">=</span> <span class="n">RandomForestRegressor</span><span class="p">(</span><span class="n">n_estimators</span><span class="o">=</span><span class="mi">100</span><span class="p">,</span> <span class="n">random_state</span><span class="o">=</span><span class="mi">42</span><span class="p">)</span>
    <span class="n">model</span><span class="p">.</span><span class="n">fit</span><span class="p">(</span><span class="n">X_train</span><span class="p">,</span> <span class="n">y_train</span><span class="p">)</span>
    
    <span class="c1"># 评估模型
</span>    <span class="n">train_score</span> <span class="o">=</span> <span class="n">model</span><span class="p">.</span><span class="n">score</span><span class="p">(</span><span class="n">X_train</span><span class="p">,</span> <span class="n">y_train</span><span class="p">)</span>
    <span class="n">test_score</span> <span class="o">=</span> <span class="n">model</span><span class="p">.</span><span class="n">score</span><span class="p">(</span><span class="n">X_test</span><span class="p">,</span> <span class="n">y_test</span><span class="p">)</span>
    
    <span class="k">return</span> <span class="n">model</span><span class="p">,</span> <span class="n">train_score</span><span class="p">,</span> <span class="n">test_score</span>
</code></pre></div></div>

<h2 id="结论">结论</h2>

<p>MRG波作为热带大气中的重要波动现象，对热带降水具有重要影响。通过深入理解MRG波的特征和机制，我们可以：</p>

<ol>
  <li><strong>改进天气预报</strong>：提高热带地区的降水预报精度</li>
  <li><strong>增进科学认识</strong>：深化对热带大气动力学的理解</li>
  <li><strong>应对气候变化</strong>：评估未来气候变化的影响</li>
  <li><strong>防灾减灾</strong>：为极端天气事件的预报提供科学依据</li>
</ol>

<p>随着观测技术和数值模拟能力的不断提高，MRG波研究将在未来的大气科学研究中发挥更重要的作用。</p>

<h2 id="参考文献">参考文献</h2>

<ol>
  <li>
    <p>Matsuno, T. (1966). Quasi-geostrophic motions in the equatorial area. Journal of the Meteorological Society of Japan, 44(1), 25-43.</p>
  </li>
  <li>
    <p>Wheeler, M., &amp; Kiladis, G. N. (1999). Convectively coupled equatorial waves: Analysis of clouds and temperature in the wavenumber-frequency domain. Journal of the Atmospheric Sciences, 56(3), 374-399.</p>
  </li>
  <li>
    <p>Kiladis, G. N., Wheeler, M. C., Haertel, P. T., Straub, K. H., &amp; Roundy, P. E. (2009). Convectively coupled equatorial waves. Reviews of Geophysics, 47(2).</p>
  </li>
  <li>
    <p>Yang, G. Y., Hoskins, B., &amp; Slingo, J. (2007). Convectively coupled equatorial waves. Part I: Horizontal and vertical structures. Journal of the Atmospheric Sciences, 64(10), 3406-3423.</p>
  </li>
</ol>

<hr />

<p><em>本文介绍了MRG波与热带降水关系的基本概念和研究方法，为相关研究提供参考。</em></p>]]></content><author><name>Xianpu Ji</name><email>xianpuji@hhu.edu.cn</email></author><category term="科研" /><category term="大气动力学" /><category term="MRG波" /><category term="热带气象" /><category term="降水" /><category term="大气动力学" /><summary type="html"><![CDATA[MRG波与热带降水的关系]]></summary></entry><entry><title type="html">CMIP6 Evaluation and Climate Change</title><link href="https://blissful-jasper.github.io/%E7%A7%91%E7%A0%94/%E6%B0%94%E5%80%99%E5%8F%98%E5%8C%96/2025/06/29/cmip6-evaluation/" rel="alternate" type="text/html" title="CMIP6 Evaluation and Climate Change" /><published>2025-06-29T00:00:00+00:00</published><updated>2025-06-29T00:00:00+00:00</updated><id>https://blissful-jasper.github.io/%E7%A7%91%E7%A0%94/%E6%B0%94%E5%80%99%E5%8F%98%E5%8C%96/2025/06/29/cmip6-evaluation</id><content type="html" xml:base="https://blissful-jasper.github.io/%E7%A7%91%E7%A0%94/%E6%B0%94%E5%80%99%E5%8F%98%E5%8C%96/2025/06/29/cmip6-evaluation/"><![CDATA[<h1 id="cmip6-模型评估与气候变化研究">CMIP6 模型评估与气候变化研究</h1>

<p>第六次耦合模式比较计划（CMIP6）为我们理解气候变化提供了重要的科学基础。本文将介绍 CMIP6 的主要特点、评估方法以及在气候变化研究中的应用。</p>

<h2 id="cmip6-简介">CMIP6 简介</h2>

<p>CMIP6 是世界气候研究计划（WCRP）下的一个重要项目，旨在通过多模式比较来提高我们对气候系统的理解。</p>

<h3 id="主要改进">主要改进</h3>

<p>相比于 CMIP5，CMIP6 在以下方面有显著改进：</p>

<ol>
  <li><strong>更高的分辨率</strong>: 许多模式采用了更高的空间分辨率</li>
  <li><strong>更复杂的物理过程</strong>: 包含更多的地球系统组件</li>
  <li><strong>更多的实验设计</strong>: 包含更多种类的数值实验</li>
  <li><strong>更好的数据管理</strong>: 采用了标准化的数据格式和元数据</li>
</ol>

<h2 id="模式评估方法">模式评估方法</h2>

<h3 id="1-基础气候态评估">1. 基础气候态评估</h3>

<p>评估模式对当前气候的模拟能力：</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">xarray</span> <span class="k">as</span> <span class="n">xr</span>
<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>

<span class="c1"># 读取 CMIP6 数据
</span><span class="n">cmip6_data</span> <span class="o">=</span> <span class="n">xr</span><span class="p">.</span><span class="n">open_dataset</span><span class="p">(</span><span class="s">'cmip6_temperature.nc'</span><span class="p">)</span>
<span class="n">obs_data</span> <span class="o">=</span> <span class="n">xr</span><span class="p">.</span><span class="n">open_dataset</span><span class="p">(</span><span class="s">'observed_temperature.nc'</span><span class="p">)</span>

<span class="c1"># 计算气候平均态
</span><span class="n">cmip6_clim</span> <span class="o">=</span> <span class="n">cmip6_data</span><span class="p">.</span><span class="n">tas</span><span class="p">.</span><span class="n">mean</span><span class="p">(</span><span class="n">dim</span><span class="o">=</span><span class="s">'time'</span><span class="p">)</span>
<span class="n">obs_clim</span> <span class="o">=</span> <span class="n">obs_data</span><span class="p">.</span><span class="n">tas</span><span class="p">.</span><span class="n">mean</span><span class="p">(</span><span class="n">dim</span><span class="o">=</span><span class="s">'time'</span><span class="p">)</span>

<span class="c1"># 计算偏差
</span><span class="n">bias</span> <span class="o">=</span> <span class="n">cmip6_clim</span> <span class="o">-</span> <span class="n">obs_clim</span>
</code></pre></div></div>

<h3 id="2-变率特征评估">2. 变率特征评估</h3>

<p>评估模式对气候变率的模拟：</p>

<ul>
  <li><strong>季节变化</strong>: 温度和降水的季节循环</li>
  <li><strong>年际变率</strong>: ENSO、IOD 等气候模态</li>
  <li><strong>年代际变化</strong>: AMO、PDO 等长期变化</li>
</ul>

<h3 id="3-极端事件评估">3. 极端事件评估</h3>

<p>评估模式对极端天气气候事件的模拟能力：</p>

<ul>
  <li><strong>极端温度</strong>: 高温、低温事件</li>
  <li><strong>极端降水</strong>: 暴雨、干旱事件</li>
  <li><strong>复合极端事件</strong>: 多种极端事件的组合</li>
</ul>

<h2 id="气候变化预估">气候变化预估</h2>

<h3 id="1-全球平均温度变化">1. 全球平均温度变化</h3>

<p>CMIP6 模式预估的全球平均温度变化：</p>

<ul>
  <li><strong>不同排放情景</strong>: SSP1-2.6、SSP2-4.5、SSP3-7.0、SSP5-8.5</li>
  <li><strong>不确定性量化</strong>: 模式间差异和内部变率</li>
  <li><strong>临界阈值</strong>: 1.5°C 和 2°C 增温阈值</li>
</ul>

<h3 id="2-区域气候变化">2. 区域气候变化</h3>

<p>不同区域的气候变化特征：</p>

<ul>
  <li><strong>北极放大</strong>: 北极地区的快速增温</li>
  <li><strong>季风系统</strong>: 亚洲季风和非洲季风的变化</li>
  <li><strong>干旱半干旱区</strong>: 降水模式的变化</li>
</ul>

<h3 id="3-海平面上升">3. 海平面上升</h3>

<p>CMIP6 对海平面上升的预估：</p>

<ul>
  <li><strong>热力学分量</strong>: 海水热膨胀</li>
  <li><strong>动力学分量</strong>: 冰川和冰盖融化</li>
  <li><strong>区域差异</strong>: 不同区域的海平面变化</li>
</ul>

<h2 id="不确定性分析">不确定性分析</h2>

<h3 id="1-模式不确定性">1. 模式不确定性</h3>

<p>来源于不同模式的差异：</p>

<ul>
  <li><strong>物理参数化</strong>: 不同的物理过程表示</li>
  <li><strong>模式结构</strong>: 不同的动力学核心</li>
  <li><strong>分辨率差异</strong>: 空间和时间分辨率的影响</li>
</ul>

<h3 id="2-情景不确定性">2. 情景不确定性</h3>

<p>来源于不同排放情景的差异：</p>

<ul>
  <li><strong>人类活动</strong>: 温室气体排放的不确定性</li>
  <li><strong>自然变率</strong>: 火山爆发、太阳活动等</li>
  <li><strong>反馈机制</strong>: 碳循环反馈等</li>
</ul>

<h3 id="3-内部变率">3. 内部变率</h3>

<p>气候系统的自然变率：</p>

<ul>
  <li><strong>混沌性质</strong>: 气候系统的内在不可预测性</li>
  <li><strong>初始条件</strong>: 初始条件的敏感性</li>
  <li><strong>非线性反馈</strong>: 复杂的相互作用</li>
</ul>

<h2 id="应用实例">应用实例</h2>

<h3 id="1-巴黎协定目标评估">1. 巴黎协定目标评估</h3>

<p>使用 CMIP6 数据评估巴黎协定目标的可达性：</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 计算不同情景下的全球平均温度
</span><span class="n">scenarios</span> <span class="o">=</span> <span class="p">[</span><span class="s">'SSP1-2.6'</span><span class="p">,</span> <span class="s">'SSP2-4.5'</span><span class="p">,</span> <span class="s">'SSP3-7.0'</span><span class="p">,</span> <span class="s">'SSP5-8.5'</span><span class="p">]</span>
<span class="n">temp_change</span> <span class="o">=</span> <span class="p">{}</span>

<span class="k">for</span> <span class="n">scenario</span> <span class="ow">in</span> <span class="n">scenarios</span><span class="p">:</span>
    <span class="n">data</span> <span class="o">=</span> <span class="n">load_cmip6_data</span><span class="p">(</span><span class="n">scenario</span><span class="p">)</span>
    <span class="n">temp_change</span><span class="p">[</span><span class="n">scenario</span><span class="p">]</span> <span class="o">=</span> <span class="n">calculate_temperature_change</span><span class="p">(</span><span class="n">data</span><span class="p">)</span>

<span class="c1"># 评估1.5°C目标
</span><span class="n">prob_1p5</span> <span class="o">=</span> <span class="n">calculate_probability</span><span class="p">(</span><span class="n">temp_change</span><span class="p">,</span> <span class="n">threshold</span><span class="o">=</span><span class="mf">1.5</span><span class="p">)</span>
</code></pre></div></div>

<h3 id="2-极端事件风险评估">2. 极端事件风险评估</h3>

<p>评估未来极端事件发生概率的变化：</p>

<ul>
  <li><strong>热浪</strong>: 频率和强度的增加</li>
  <li><strong>强降水</strong>: 极端降水事件的变化</li>
  <li><strong>干旱</strong>: 干旱风险的区域差异</li>
</ul>

<h3 id="3-影响评估">3. 影响评估</h3>

<p>评估气候变化对不同部门的影响：</p>

<ul>
  <li><strong>农业</strong>: 作物产量和种植适宜性</li>
  <li><strong>水资源</strong>: 径流和水资源可用性</li>
  <li><strong>生态系统</strong>: 生物多样性和生态系统服务</li>
</ul>

<h2 id="数据使用指南">数据使用指南</h2>

<h3 id="1-数据获取">1. 数据获取</h3>

<p>CMIP6 数据可以通过以下途径获取：</p>

<ul>
  <li><strong>ESGF</strong>: 地球系统网格联合会</li>
  <li><strong>云平台</strong>: Google Cloud、AWS 等</li>
  <li><strong>区域数据中心</strong>: 各国的气候数据中心</li>
</ul>

<h3 id="2-数据处理">2. 数据处理</h3>

<p>数据处理的关键步骤：</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">intake</span>
<span class="kn">import</span> <span class="nn">xarray</span> <span class="k">as</span> <span class="n">xr</span>

<span class="c1"># 使用 intake-esm 目录
</span><span class="n">cat</span> <span class="o">=</span> <span class="n">intake</span><span class="p">.</span><span class="n">open_esm_datastore</span><span class="p">(</span><span class="s">'cmip6-pangeo-cloud.json'</span><span class="p">)</span>

<span class="c1"># 搜索数据
</span><span class="n">cat_subset</span> <span class="o">=</span> <span class="n">cat</span><span class="p">.</span><span class="n">search</span><span class="p">(</span>
    <span class="n">experiment_id</span><span class="o">=</span><span class="s">'historical'</span><span class="p">,</span>
    <span class="n">variable_id</span><span class="o">=</span><span class="s">'tas'</span><span class="p">,</span>
    <span class="n">member_id</span><span class="o">=</span><span class="s">'r1i1p1f1'</span>
<span class="p">)</span>

<span class="c1"># 加载数据
</span><span class="n">dset_dict</span> <span class="o">=</span> <span class="n">cat_subset</span><span class="p">.</span><span class="n">to_dataset_dict</span><span class="p">()</span>
</code></pre></div></div>

<h3 id="3-质量控制">3. 质量控制</h3>

<p>数据质量控制的重要性：</p>

<ul>
  <li><strong>异常值检测</strong>: 识别和处理异常数据</li>
  <li><strong>时间序列连续性</strong>: 确保时间序列的完整性</li>
  <li><strong>空间一致性</strong>: 检查空间数据的一致性</li>
</ul>

<h2 id="未来发展">未来发展</h2>

<h3 id="1-技术发展">1. 技术发展</h3>

<ul>
  <li><strong>机器学习</strong>: 应用于模式评估和偏差订正</li>
  <li><strong>大数据技术</strong>: 处理海量气候数据</li>
  <li><strong>云计算</strong>: 提高计算效率和数据共享</li>
</ul>

<h3 id="2-科学问题">2. 科学问题</h3>

<ul>
  <li><strong>临界点</strong>: 气候系统的临界点研究</li>
  <li><strong>极端事件</strong>: 极端事件的归因和预估</li>
  <li><strong>区域降尺度</strong>: 高分辨率区域气候信息</li>
</ul>

<h3 id="3-应用拓展">3. 应用拓展</h3>

<ul>
  <li><strong>气候服务</strong>: 为决策提供气候信息</li>
  <li><strong>影响评估</strong>: 跨学科的影响评估研究</li>
  <li><strong>适应策略</strong>: 基于科学的适应策略制定</li>
</ul>

<h2 id="结论">结论</h2>

<p>CMIP6 为我们提供了迄今为止最全面的气候变化预估信息。通过系统的模式评估和不确定性分析，我们可以更好地理解气候变化的风险和影响，为气候政策和适应策略提供科学支撑。</p>

<h2 id="参考文献">参考文献</h2>

<ol>
  <li>
    <p>Eyring, V., et al. (2016). Overview of the Coupled Model Intercomparison Project Phase 6 (CMIP6) experimental design and organization. Geoscientific Model Development, 9(5), 1937-1958.</p>
  </li>
  <li>
    <p>Zelinka, M. D., et al. (2020). Causes of higher climate sensitivity in CMIP6 models. Geophysical Research Letters, 47(1), e2019GL085782.</p>
  </li>
  <li>
    <p>Tebaldi, C., et al. (2021). Climate model projections from the scenario model intercomparison project (ScenarioMIP) of CMIP6. Earth System Dynamics, 12(1), 253-293.</p>
  </li>
</ol>

<hr />

<p><em>本文提供了 CMIP6 模型评估和气候变化研究的基本框架，具体应用需要根据研究问题进行调整。</em></p>]]></content><author><name>Xianpu Ji</name><email>xianpuji@hhu.edu.cn</email></author><category term="科研" /><category term="气候变化" /><category term="CMIP6" /><category term="气候模式" /><category term="模式评估" /><category term="气候变化" /><summary type="html"><![CDATA[CMIP6 模型评估与气候变化研究]]></summary></entry><entry><title type="html">Create a Jekyll Site</title><link href="https://blissful-jasper.github.io/%E6%8A%80%E6%9C%AF/jekyll/2025/06/29/create-site-jekyll/" rel="alternate" type="text/html" title="Create a Jekyll Site" /><published>2025-06-29T00:00:00+00:00</published><updated>2025-06-29T00:00:00+00:00</updated><id>https://blissful-jasper.github.io/%E6%8A%80%E6%9C%AF/jekyll/2025/06/29/create-site-jekyll</id><content type="html" xml:base="https://blissful-jasper.github.io/%E6%8A%80%E6%9C%AF/jekyll/2025/06/29/create-site-jekyll/"><![CDATA[<h1 id="如何创建一个新的-jekyll-网站">如何创建一个新的 Jekyll 网站</h1>

<p>Jekyll 是一个静态网站生成器，特别适合用于创建博客和学术网站。本文将介绍如何从零开始创建一个 Jekyll 网站。</p>

<h2 id="安装-jekyll">安装 Jekyll</h2>

<p>首先，你需要安装 Ruby 和 Jekyll：</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># 安装 Ruby (使用 RVM 或 rbenv)</span>
<span class="c"># 然后安装 Jekyll 和 bundler</span>
gem <span class="nb">install </span>jekyll bundler
</code></pre></div></div>

<h2 id="创建新网站">创建新网站</h2>

<p>使用以下命令创建一个新的 Jekyll 网站：</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>jekyll new my-awesome-site
<span class="nb">cd </span>my-awesome-site
</code></pre></div></div>

<h2 id="目录结构">目录结构</h2>

<p>Jekyll 网站的基本目录结构如下：</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>my-awesome-site/
├── _config.yml
├── _data/
├── _includes/
├── _layouts/
├── _posts/
├── _sass/
├── assets/
├── index.html
└── Gemfile
</code></pre></div></div>

<h2 id="配置网站">配置网站</h2>

<p>编辑 <code class="language-plaintext highlighter-rouge">_config.yml</code> 文件来配置你的网站：</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">title</span><span class="pi">:</span> <span class="s">Your Site Title</span>
<span class="na">description</span><span class="pi">:</span> <span class="s">A brief description of your site</span>
<span class="na">baseurl</span><span class="pi">:</span> <span class="s2">"</span><span class="s">"</span> <span class="c1"># 如果不是根目录，填写子目录</span>
<span class="na">url</span><span class="pi">:</span> <span class="s2">"</span><span class="s">https://your-username.github.io"</span>
</code></pre></div></div>

<h2 id="创建你的第一篇文章">创建你的第一篇文章</h2>

<p>在 <code class="language-plaintext highlighter-rouge">_posts</code> 目录中创建一个新文件，文件名格式为 <code class="language-plaintext highlighter-rouge">YYYY-MM-DD-title.md</code>：</p>

<div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nn">---</span>
<span class="na">layout</span><span class="pi">:</span> <span class="s">post</span>
<span class="na">title</span><span class="pi">:</span> <span class="s2">"</span><span class="s">我的第一篇文章"</span>
<span class="na">date</span><span class="pi">:</span> <span class="s">2025-06-29</span>
<span class="na">categories</span><span class="pi">:</span> <span class="pi">[</span><span class="nv">blog</span><span class="pi">]</span>
<span class="na">tags</span><span class="pi">:</span> <span class="pi">[</span><span class="nv">welcome</span><span class="pi">]</span>
<span class="nn">---</span>

<span class="gh"># 欢迎来到我的博客</span>

这是我的第一篇文章！
</code></pre></div></div>

<h2 id="本地预览">本地预览</h2>

<p>使用以下命令在本地预览你的网站：</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>bundle <span class="nb">exec </span>jekyll serve
</code></pre></div></div>

<p>然后在浏览器中访问 <code class="language-plaintext highlighter-rouge">http://localhost:4000</code>。</p>

<h2 id="部署到-github-pages">部署到 GitHub Pages</h2>

<ol>
  <li>创建一个新的 GitHub 仓库</li>
  <li>将你的 Jekyll 网站推送到仓库</li>
  <li>在仓库设置中启用 GitHub Pages</li>
  <li>选择 main 分支作为源</li>
</ol>

<h2 id="总结">总结</h2>

<p>Jekyll 是一个强大而灵活的静态网站生成器，非常适合创建博客和学术网站。通过合理的配置和主题选择，你可以快速创建一个专业的网站。</p>

<p>记住要定期更新你的内容，并利用 Jekyll 的各种功能来优化你的网站！</p>]]></content><author><name>Xianpu Ji</name><email>xianpuji@hhu.edu.cn</email></author><category term="技术" /><category term="Jekyll" /><category term="Jekyll" /><category term="GitHub Pages" /><category term="建站" /><category term="博客" /><summary type="html"><![CDATA[如何创建一个新的 Jekyll 网站]]></summary></entry><entry><title type="html">欢迎来到我的博客</title><link href="https://blissful-jasper.github.io/%E6%9D%82%E8%B0%88/%E6%AC%A2%E8%BF%8E/2025/06/29/welcome-to-my-blog/" rel="alternate" type="text/html" title="欢迎来到我的博客" /><published>2025-06-29T00:00:00+00:00</published><updated>2025-06-29T00:00:00+00:00</updated><id>https://blissful-jasper.github.io/%E6%9D%82%E8%B0%88/%E6%AC%A2%E8%BF%8E/2025/06/29/welcome-to-my-blog</id><content type="html" xml:base="https://blissful-jasper.github.io/%E6%9D%82%E8%B0%88/%E6%AC%A2%E8%BF%8E/2025/06/29/welcome-to-my-blog/"><![CDATA[<h1 id="欢迎来到我的博客">欢迎来到我的博客</h1>

<p>欢迎来到我的学术博客！这里是我分享研究经验、学术见解和科学思考的地方。</p>

<h2 id="关于这个博客">关于这个博客</h2>

<p>这个博客旨在：</p>

<ul>
  <li><strong>分享研究经验</strong>：记录我在大气科学研究中的发现和体会</li>
  <li><strong>传播科学知识</strong>：用通俗易懂的语言解释复杂的科学概念</li>
  <li><strong>促进学术交流</strong>：与同行和感兴趣的读者进行思想碰撞</li>
  <li><strong>记录学习历程</strong>：记录在学术道路上的成长和思考</li>
</ul>

<h2 id="主要内容">主要内容</h2>

<h3 id="1-研究分享">1. 研究分享</h3>

<p>我会定期分享：</p>

<ul>
  <li><strong>热带气象学</strong>：热带波动、对流系统、季风等</li>
  <li><strong>气候动力学</strong>：大气环流、气候变化、极端事件等</li>
  <li><strong>数值模拟</strong>：WRF模式、气候模式、数据分析等</li>
  <li><strong>观测分析</strong>：卫星数据、再分析数据、统计方法等</li>
</ul>

<h3 id="2-技术教程">2. 技术教程</h3>

<p>包括但不限于：</p>

<ul>
  <li><strong>Python编程</strong>：科学计算、数据可视化、机器学习</li>
  <li><strong>数据分析</strong>：时间序列分析、空间分析、统计建模</li>
  <li><strong>可视化技术</strong>：matplotlib、cartopy、plotly等</li>
  <li><strong>工具使用</strong>：Git、LaTeX、Jekyll等</li>
</ul>

<h3 id="3-学术见解">3. 学术见解</h3>

<p>分享对科学问题的思考：</p>

<ul>
  <li><strong>研究方法论</strong>：如何提出好的科学问题</li>
  <li><strong>跨学科思维</strong>：气象学与其他学科的交叉</li>
  <li><strong>科学写作</strong>：如何写出好的学术论文</li>
  <li><strong>职业发展</strong>：学术生涯的规划和思考</li>
</ul>

<h2 id="我的研究兴趣">我的研究兴趣</h2>

<h3 id="热带波动">热带波动</h3>

<p>我特别关注热带大气中的各种波动现象：</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 示例：分析热带波动
</span><span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>

<span class="k">def</span> <span class="nf">analyze_tropical_waves</span><span class="p">():</span>
    <span class="s">"""
    分析热带波动的基本特征
    """</span>
    <span class="c1"># 这里是一个简单的示例
</span>    <span class="n">time</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">linspace</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">365</span><span class="p">,</span> <span class="mi">1000</span><span class="p">)</span>  <span class="c1"># 一年的时间
</span>    
    <span class="c1"># 模拟不同类型的热带波动
</span>    <span class="n">kelvin_wave</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">sin</span><span class="p">(</span><span class="mi">2</span> <span class="o">*</span> <span class="n">np</span><span class="p">.</span><span class="n">pi</span> <span class="o">*</span> <span class="n">time</span> <span class="o">/</span> <span class="mi">15</span><span class="p">)</span>  <span class="c1"># 开尔文波，约15天周期
</span>    <span class="n">mrg_wave</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">sin</span><span class="p">(</span><span class="mi">2</span> <span class="o">*</span> <span class="n">np</span><span class="p">.</span><span class="n">pi</span> <span class="o">*</span> <span class="n">time</span> <span class="o">/</span> <span class="mi">4</span><span class="p">)</span>      <span class="c1"># MRG波，约4天周期
</span>    <span class="n">mjo</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">sin</span><span class="p">(</span><span class="mi">2</span> <span class="o">*</span> <span class="n">np</span><span class="p">.</span><span class="n">pi</span> <span class="o">*</span> <span class="n">time</span> <span class="o">/</span> <span class="mi">45</span><span class="p">)</span>          <span class="c1"># MJO，约45天周期
</span>    
    <span class="n">plt</span><span class="p">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">12</span><span class="p">,</span> <span class="mi">8</span><span class="p">))</span>
    
    <span class="n">plt</span><span class="p">.</span><span class="n">subplot</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>
    <span class="n">plt</span><span class="p">.</span><span class="n">plot</span><span class="p">(</span><span class="n">time</span><span class="p">,</span> <span class="n">kelvin_wave</span><span class="p">)</span>
    <span class="n">plt</span><span class="p">.</span><span class="n">title</span><span class="p">(</span><span class="s">'开尔文波'</span><span class="p">)</span>
    <span class="n">plt</span><span class="p">.</span><span class="n">ylabel</span><span class="p">(</span><span class="s">'振幅'</span><span class="p">)</span>
    
    <span class="n">plt</span><span class="p">.</span><span class="n">subplot</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span>
    <span class="n">plt</span><span class="p">.</span><span class="n">plot</span><span class="p">(</span><span class="n">time</span><span class="p">,</span> <span class="n">mrg_wave</span><span class="p">)</span>
    <span class="n">plt</span><span class="p">.</span><span class="n">title</span><span class="p">(</span><span class="s">'MRG波'</span><span class="p">)</span>
    <span class="n">plt</span><span class="p">.</span><span class="n">ylabel</span><span class="p">(</span><span class="s">'振幅'</span><span class="p">)</span>
    
    <span class="n">plt</span><span class="p">.</span><span class="n">subplot</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">3</span><span class="p">)</span>
    <span class="n">plt</span><span class="p">.</span><span class="n">plot</span><span class="p">(</span><span class="n">time</span><span class="p">,</span> <span class="n">mjo</span><span class="p">)</span>
    <span class="n">plt</span><span class="p">.</span><span class="n">title</span><span class="p">(</span><span class="s">'马登-朱利安振荡(MJO)'</span><span class="p">)</span>
    <span class="n">plt</span><span class="p">.</span><span class="n">ylabel</span><span class="p">(</span><span class="s">'振幅'</span><span class="p">)</span>
    <span class="n">plt</span><span class="p">.</span><span class="n">xlabel</span><span class="p">(</span><span class="s">'时间(天)'</span><span class="p">)</span>
    
    <span class="n">plt</span><span class="p">.</span><span class="n">tight_layout</span><span class="p">()</span>
    <span class="n">plt</span><span class="p">.</span><span class="n">show</span><span class="p">()</span>

<span class="c1"># 运行分析
</span><span class="n">analyze_tropical_waves</span><span class="p">()</span>
</code></pre></div></div>

<h3 id="气候模拟">气候模拟</h3>

<p>我也致力于使用数值模式理解气候系统：</p>

<ul>
  <li><strong>CMIP6模式评估</strong>：评估最新气候模式的性能</li>
  <li><strong>区域气候模拟</strong>：使用WRF等模式进行高分辨率模拟</li>
  <li><strong>极端事件研究</strong>：分析极端天气事件的变化趋势</li>
</ul>

<h3 id="数据科学">数据科学</h3>

<p>在气象研究中应用现代数据科学方法：</p>

<ul>
  <li><strong>机器学习</strong>：用于天气预报和气候预测</li>
  <li><strong>大数据分析</strong>：处理海量气象观测数据</li>
  <li><strong>可视化技术</strong>：创建直观的科学图表</li>
</ul>

<h2 id="博客特色">博客特色</h2>

<h3 id="1-理论与实践结合">1. 理论与实践结合</h3>

<p>每篇文章都会包含：</p>

<ul>
  <li><strong>理论背景</strong>：深入浅出地解释科学原理</li>
  <li><strong>实际代码</strong>：提供可运行的Python代码示例</li>
  <li><strong>数据分析</strong>：使用真实数据进行分析</li>
  <li><strong>可视化展示</strong>：用图表清晰地展示结果</li>
</ul>

<h3 id="2-开放式讨论">2. 开放式讨论</h3>

<p>我鼓励：</p>

<ul>
  <li><strong>评论交流</strong>：欢迎在文章下方留言讨论</li>
  <li><strong>问题反馈</strong>：如有疑问或建议，请随时联系</li>
  <li><strong>合作机会</strong>：开放合作，共同推进科学研究</li>
</ul>

<h3 id="3-持续更新">3. 持续更新</h3>

<p>博客内容会定期更新：</p>

<ul>
  <li><strong>每周文章</strong>：争取每周发布新的内容</li>
  <li><strong>系列专题</strong>：针对特定主题的深度系列文章</li>
  <li><strong>及时跟进</strong>：对最新的科学发现和技术进展的及时分析</li>
</ul>

<h2 id="读者指南">读者指南</h2>

<h3 id="适合人群">适合人群</h3>

<p>这个博客适合：</p>

<ul>
  <li><strong>研究生和博士生</strong>：正在进行大气科学研究的学生</li>
  <li><strong>科研工作者</strong>：大气科学及相关领域的研究人员</li>
  <li><strong>工程师和分析师</strong>：从事气象预报和气候服务的专业人士</li>
  <li><strong>科学爱好者</strong>：对大气科学和气候变化感兴趣的公众</li>
</ul>

<h3 id="阅读建议">阅读建议</h3>

<p>为了更好地阅读这个博客：</p>

<ol>
  <li><strong>基础知识</strong>：建议具备基本的物理和数学知识</li>
  <li><strong>编程基础</strong>：Python编程基础会有助于理解代码示例</li>
  <li><strong>保持开放</strong>：对新的概念和方法保持开放的心态</li>
  <li><strong>动手实践</strong>：尝试运行和修改文章中的代码</li>
</ol>

<h3 id="互动方式">互动方式</h3>

<p>欢迎通过以下方式与我互动：</p>

<ul>
  <li><strong>评论区</strong>：在文章下方留言</li>
  <li><strong>邮件联系</strong>：发送邮件进行深入讨论</li>
  <li><strong>社交媒体</strong>：关注我的学术社交媒体账号</li>
  <li><strong>学术会议</strong>：在学术会议上面对面交流</li>
</ul>

<h2 id="未来计划">未来计划</h2>

<h3 id="短期目标6个月内">短期目标（6个月内）</h3>

<ul>
  <li><strong>建立内容框架</strong>：完善博客的内容分类和结构</li>
  <li><strong>定期更新</strong>：保持稳定的更新频率</li>
  <li><strong>读者反馈</strong>：收集并回应读者的反馈和建议</li>
  <li><strong>技术优化</strong>：不断改进博客的技术体验</li>
</ul>

<h3 id="中期目标1-2年内">中期目标（1-2年内）</h3>

<ul>
  <li><strong>专题系列</strong>：推出深度的专题系列文章</li>
  <li><strong>多媒体内容</strong>：加入视频、动画等多媒体元素</li>
  <li><strong>国际化</strong>：考虑提供英文版本的内容</li>
  <li><strong>社区建设</strong>：建立活跃的读者社区</li>
</ul>

<h3 id="长期愿景">长期愿景</h3>

<ul>
  <li><strong>知识传播</strong>：成为大气科学知识传播的重要平台</li>
  <li><strong>学术影响</strong>：对学术研究产生积极影响</li>
  <li><strong>人才培养</strong>：帮助更多年轻学者成长</li>
  <li><strong>科学普及</strong>：向公众普及气象和气候科学知识</li>
</ul>

<h2 id="版权声明">版权声明</h2>

<p>博客内容遵循以下原则：</p>

<ul>
  <li><strong>原创内容</strong>：除特别说明外，所有内容均为原创</li>
  <li><strong>开放共享</strong>：欢迎转载，但请注明出处</li>
  <li><strong>代码开源</strong>：所有代码示例采用MIT许可证</li>
  <li><strong>学术诚信</strong>：严格遵守学术规范和伦理</li>
</ul>

<h2 id="致谢">致谢</h2>

<p>感谢所有支持这个博客的朋友：</p>

<ul>
  <li><strong>导师和同事</strong>：提供的学术指导和支持</li>
  <li><strong>开源社区</strong>：提供的优秀工具和资源</li>
  <li><strong>读者朋友</strong>：给予的关注和反馈</li>
  <li><strong>家人朋友</strong>：给予的理解和鼓励</li>
</ul>

<h2 id="结语">结语</h2>

<p>科学是一个不断探索和发现的过程。通过这个博客，我希望能够与大家分享这个美妙的旅程。让我们一起：</p>

<ul>
  <li><strong>追求真理</strong>：保持对科学真理的不懈追求</li>
  <li><strong>开放合作</strong>：在合作中共同进步</li>
  <li><strong>传承知识</strong>：将知识传递给下一代</li>
  <li><strong>服务社会</strong>：用科学知识服务社会发展</li>
</ul>

<p>期待与您在这个学术空间中相遇和交流！</p>

<hr />

<p><em>“科学的真正精神，是要在疑问中寻求真理，在真理中服务人类。”</em></p>

<p>欢迎来到我的学术博客，让我们一起探索大气科学的奥秘！</p>]]></content><author><name>Xianpu Ji</name><email>xianpuji@hhu.edu.cn</email></author><category term="杂谈" /><category term="欢迎" /><category term="欢迎" /><category term="博客" /><category term="介绍" /><summary type="html"><![CDATA[欢迎来到我的博客]]></summary></entry><entry><title type="html">Deep Learning in Meteorology</title><link href="https://blissful-jasper.github.io/%E7%A7%91%E7%A0%94/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/2024/12/15/dl-meteorology/" rel="alternate" type="text/html" title="Deep Learning in Meteorology" /><published>2024-12-15T00:00:00+00:00</published><updated>2024-12-15T00:00:00+00:00</updated><id>https://blissful-jasper.github.io/%E7%A7%91%E7%A0%94/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/2024/12/15/dl-meteorology</id><content type="html" xml:base="https://blissful-jasper.github.io/%E7%A7%91%E7%A0%94/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/2024/12/15/dl-meteorology/"><![CDATA[<h1 id="深度学习在气象领域的应用">深度学习在气象领域的应用</h1>

<p>深度学习作为人工智能的重要分支，近年来在气象科学领域展现出了巨大的应用潜力。本文将探讨深度学习在天气预报、气候模拟和极端天气识别等方面的应用。</p>

<h2 id="引言">引言</h2>

<p>传统的数值天气预报模型基于物理方程，需要大量的计算资源和时间。而深度学习方法可以通过学习历史气象数据的模式，提供更快速、准确的预报。</p>

<h2 id="深度学习在天气预报中的应用">深度学习在天气预报中的应用</h2>

<h3 id="1-降水预报">1. 降水预报</h3>

<p>深度学习模型可以有效地从卫星图像和雷达数据中提取特征，用于短期降水预报：</p>

<ul>
  <li><strong>卷积神经网络 (CNN)</strong>: 处理雷达回波图像，识别降水模式</li>
  <li><strong>循环神经网络 (RNN)</strong>: 处理时序数据，预测降水发展趋势</li>
  <li><strong>注意力机制</strong>: 关注关键的气象特征和区域</li>
</ul>

<h3 id="2-温度预报">2. 温度预报</h3>

<p>基于深度学习的温度预报模型可以：</p>

<ul>
  <li>利用多源数据融合提高预报精度</li>
  <li>学习复杂的非线性关系</li>
  <li>提供不确定性量化</li>
</ul>

<h3 id="3-极端天气识别">3. 极端天气识别</h3>

<p>深度学习在极端天气识别方面表现突出：</p>

<ul>
  <li><strong>台风路径预测</strong>: 使用深度学习模型分析卫星云图</li>
  <li><strong>龙卷风识别</strong>: 从多普勒雷达数据中识别龙卷风特征</li>
  <li><strong>暴雨预警</strong>: 结合多种气象要素进行暴雨预警</li>
</ul>

<h2 id="技术挑战与解决方案">技术挑战与解决方案</h2>

<h3 id="数据质量问题">数据质量问题</h3>

<p>气象数据通常存在以下问题：</p>

<ol>
  <li><strong>数据缺失</strong>: 使用插值和数据增强技术</li>
  <li><strong>观测误差</strong>: 采用鲁棒的训练方法</li>
  <li><strong>时空不均匀</strong>: 使用自适应采样策略</li>
</ol>

<h3 id="模型可解释性">模型可解释性</h3>

<p>为了提高模型的可信度，需要：</p>

<ul>
  <li>使用可解释的深度学习架构</li>
  <li>分析模型学习到的物理关系</li>
  <li>结合领域知识进行模型设计</li>
</ul>

<h2 id="实际应用案例">实际应用案例</h2>

<h3 id="案例1-欧洲中期天气预报中心-ecmwf">案例1: 欧洲中期天气预报中心 (ECMWF)</h3>

<p>ECMWF 开发了基于深度学习的后处理系统，用于改善数值模式的预报结果。</p>

<h3 id="案例2-谷歌的-metnet">案例2: 谷歌的 MetNet</h3>

<p>MetNet 是一个基于神经网络的降水预报系统，可以提供高分辨率的短期降水预报。</p>

<h3 id="案例3-中国气象局的-ai-应用">案例3: 中国气象局的 AI 应用</h3>

<p>中国气象局在台风路径预报、暴雨预警等方面应用深度学习技术。</p>

<h2 id="未来发展趋势">未来发展趋势</h2>

<h3 id="1-多模态数据融合">1. 多模态数据融合</h3>

<p>未来的深度学习模型将能够更好地融合：</p>

<ul>
  <li>卫星遥感数据</li>
  <li>地面观测数据</li>
  <li>数值模式输出</li>
  <li>社交媒体数据</li>
</ul>

<h3 id="2-实时预报系统">2. 实时预报系统</h3>

<p>开发更快速、更准确的实时预报系统：</p>

<ul>
  <li>边缘计算部署</li>
  <li>流式数据处理</li>
  <li>自适应模型更新</li>
</ul>

<h3 id="3-气候变化应用">3. 气候变化应用</h3>

<p>深度学习在气候变化研究中的应用：</p>

<ul>
  <li>极端事件归因分析</li>
  <li>长期气候趋势预测</li>
  <li>气候模式降尺度</li>
</ul>

<h2 id="结论">结论</h2>

<p>深度学习在气象领域的应用前景广阔，但仍需要解决数据质量、模型可解释性和计算效率等挑战。随着技术的不断发展，深度学习将在气象预报和气候研究中发挥更重要的作用。</p>

<h2 id="参考文献">参考文献</h2>

<ol>
  <li>Reichstein, M., et al. (2019). Deep learning and process understanding for data-driven Earth system science. Nature, 566(7743), 195-204.</li>
  <li>Scher, S., &amp; Messori, G. (2019). Weather and climate forecasting with neural networks. Journal of Advances in Modeling Earth Systems, 11(8), 2680-2693.</li>
  <li>Bonavita, M., &amp; Laloyaux, P. (2020). Machine learning for model error inference and correction. Journal of Advances in Modeling Earth Systems, 12(12), e2020MS002232.</li>
</ol>

<hr />

<p><em>本文是对深度学习在气象领域应用的概述，更多详细信息请参考相关学术文献。</em></p>]]></content><author><name>Xianpu Ji</name><email>xianpuji@hhu.edu.cn</email></author><category term="科研" /><category term="深度学习" /><category term="深度学习" /><category term="机器学习" /><category term="气象预报" /><category term="人工智能" /><summary type="html"><![CDATA[深度学习在气象领域的应用]]></summary></entry><entry><title type="html">Getting Started with Machine Learning in Climate Science</title><link href="https://blissful-jasper.github.io/jekyll-blog-template/research/machine-learning/2024/01/15/machine-learning-climate-science/" rel="alternate" type="text/html" title="Getting Started with Machine Learning in Climate Science" /><published>2024-01-15T00:00:00+00:00</published><updated>2024-01-15T00:00:00+00:00</updated><id>https://blissful-jasper.github.io/jekyll-blog-template/research/machine-learning/2024/01/15/machine-learning-climate-science</id><content type="html" xml:base="https://blissful-jasper.github.io/jekyll-blog-template/research/machine-learning/2024/01/15/machine-learning-climate-science/"><![CDATA[<p>Machine learning has revolutionized many fields of science, and climate science is no exception. In this post, I’ll share insights from my recent research and provide a practical introduction to applying ML techniques in atmospheric sciences.</p>

<h2 id="why-machine-learning-in-climate-science">Why Machine Learning in Climate Science?</h2>

<p>Climate data is characterized by:</p>
<ul>
  <li><strong>High dimensionality</strong>: Satellite observations, reanalysis data, and model outputs contain millions of data points</li>
  <li><strong>Complex patterns</strong>: Non-linear relationships between variables that traditional statistical methods struggle to capture</li>
  <li><strong>Temporal dependencies</strong>: Time series with multiple scales of variability</li>
  <li><strong>Spatial correlations</strong>: Geographic patterns that span different scales</li>
</ul>

<p>Machine learning excels at finding patterns in such complex, high-dimensional datasets.</p>

<h2 id="getting-started-essential-tools">Getting Started: Essential Tools</h2>

<h3 id="python-libraries">Python Libraries</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="kn">import</span> <span class="nn">xarray</span> <span class="k">as</span> <span class="n">xr</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>
<span class="kn">import</span> <span class="nn">cartopy.crs</span> <span class="k">as</span> <span class="n">ccrs</span>
<span class="kn">import</span> <span class="nn">cartopy.feature</span> <span class="k">as</span> <span class="n">cfeature</span>

<span class="c1"># Machine learning libraries
</span><span class="kn">from</span> <span class="nn">sklearn.ensemble</span> <span class="kn">import</span> <span class="n">RandomForestRegressor</span>
<span class="kn">from</span> <span class="nn">sklearn.model_selection</span> <span class="kn">import</span> <span class="n">train_test_split</span>
<span class="kn">from</span> <span class="nn">sklearn.metrics</span> <span class="kn">import</span> <span class="n">mean_squared_error</span><span class="p">,</span> <span class="n">r2_score</span>
<span class="kn">import</span> <span class="nn">tensorflow</span> <span class="k">as</span> <span class="n">tf</span>
<span class="kn">from</span> <span class="nn">tensorflow</span> <span class="kn">import</span> <span class="n">keras</span>
</code></pre></div></div>

<h3 id="data-sources">Data Sources</h3>

<p>Popular climate datasets for ML applications:</p>
<ul>
  <li><strong>ERA5 Reanalysis</strong>: High-resolution atmospheric reanalysis</li>
  <li><strong>CHIRPS</strong>: Precipitation data for tropical regions</li>
  <li><strong>MODIS</strong>: Satellite observations of clouds, vegetation, etc.</li>
  <li><strong>CMIP6</strong>: Climate model ensemble data</li>
</ul>

<h2 id="practical-example-precipitation-prediction">Practical Example: Precipitation Prediction</h2>

<p>Let’s build a simple model to predict precipitation using atmospheric variables.</p>

<h3 id="1-data-preparation">1. Data Preparation</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">xarray</span> <span class="k">as</span> <span class="n">xr</span>

<span class="c1"># Load ERA5 reanalysis data
</span><span class="n">ds</span> <span class="o">=</span> <span class="n">xr</span><span class="p">.</span><span class="n">open_dataset</span><span class="p">(</span><span class="s">'era5_data.nc'</span><span class="p">)</span>

<span class="c1"># Select relevant variables
</span><span class="n">variables</span> <span class="o">=</span> <span class="p">[</span><span class="s">'temperature_2m'</span><span class="p">,</span> <span class="s">'relative_humidity'</span><span class="p">,</span> <span class="s">'sea_level_pressure'</span><span class="p">,</span> 
             <span class="s">'wind_speed_10m'</span><span class="p">,</span> <span class="s">'total_precipitation'</span><span class="p">]</span>

<span class="c1"># Extract data for a specific region (e.g., tropical Pacific)
</span><span class="n">region_data</span> <span class="o">=</span> <span class="n">ds</span><span class="p">.</span><span class="n">sel</span><span class="p">(</span>
    <span class="n">latitude</span><span class="o">=</span><span class="nb">slice</span><span class="p">(</span><span class="o">-</span><span class="mi">20</span><span class="p">,</span> <span class="mi">20</span><span class="p">),</span>
    <span class="n">longitude</span><span class="o">=</span><span class="nb">slice</span><span class="p">(</span><span class="mi">120</span><span class="p">,</span> <span class="mi">280</span><span class="p">),</span>
    <span class="n">time</span><span class="o">=</span><span class="nb">slice</span><span class="p">(</span><span class="s">'2010-01-01'</span><span class="p">,</span> <span class="s">'2020-12-31'</span><span class="p">)</span>
<span class="p">)[</span><span class="n">variables</span><span class="p">]</span>

<span class="k">print</span><span class="p">(</span><span class="sa">f</span><span class="s">"Data shape: </span><span class="si">{</span><span class="n">region_data</span><span class="p">.</span><span class="n">dims</span><span class="si">}</span><span class="s">"</span><span class="p">)</span>
</code></pre></div></div>

<h3 id="2-feature-engineering">2. Feature Engineering</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">create_features</span><span class="p">(</span><span class="n">data</span><span class="p">):</span>
    <span class="s">"""Create additional features from basic meteorological variables."""</span>
    
    <span class="c1"># Calculate gradients
</span>    <span class="n">data</span><span class="p">[</span><span class="s">'temp_gradient_lat'</span><span class="p">]</span> <span class="o">=</span> <span class="n">data</span><span class="p">[</span><span class="s">'temperature_2m'</span><span class="p">].</span><span class="n">differentiate</span><span class="p">(</span><span class="s">'latitude'</span><span class="p">)</span>
    <span class="n">data</span><span class="p">[</span><span class="s">'temp_gradient_lon'</span><span class="p">]</span> <span class="o">=</span> <span class="n">data</span><span class="p">[</span><span class="s">'temperature_2m'</span><span class="p">].</span><span class="n">differentiate</span><span class="p">(</span><span class="s">'longitude'</span><span class="p">)</span>
    
    <span class="c1"># Calculate relative vorticity
</span>    <span class="n">data</span><span class="p">[</span><span class="s">'vorticity'</span><span class="p">]</span> <span class="o">=</span> <span class="n">calculate_vorticity</span><span class="p">(</span><span class="n">data</span><span class="p">[</span><span class="s">'wind_u'</span><span class="p">],</span> <span class="n">data</span><span class="p">[</span><span class="s">'wind_v'</span><span class="p">])</span>
    
    <span class="c1"># Time-based features
</span>    <span class="n">data</span><span class="p">[</span><span class="s">'day_of_year'</span><span class="p">]</span> <span class="o">=</span> <span class="n">data</span><span class="p">[</span><span class="s">'time.dayofyear'</span><span class="p">]</span>
    <span class="n">data</span><span class="p">[</span><span class="s">'hour'</span><span class="p">]</span> <span class="o">=</span> <span class="n">data</span><span class="p">[</span><span class="s">'time.hour'</span><span class="p">]</span>
    
    <span class="c1"># Lagged features (previous time steps)
</span>    <span class="n">data</span><span class="p">[</span><span class="s">'temp_lag1'</span><span class="p">]</span> <span class="o">=</span> <span class="n">data</span><span class="p">[</span><span class="s">'temperature_2m'</span><span class="p">].</span><span class="n">shift</span><span class="p">(</span><span class="n">time</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
    <span class="n">data</span><span class="p">[</span><span class="s">'precip_lag1'</span><span class="p">]</span> <span class="o">=</span> <span class="n">data</span><span class="p">[</span><span class="s">'total_precipitation'</span><span class="p">].</span><span class="n">shift</span><span class="p">(</span><span class="n">time</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
    
    <span class="k">return</span> <span class="n">data</span>

<span class="c1"># Apply feature engineering
</span><span class="n">enhanced_data</span> <span class="o">=</span> <span class="n">create_features</span><span class="p">(</span><span class="n">region_data</span><span class="p">)</span>
</code></pre></div></div>

<h3 id="3-model-training">3. Model Training</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Prepare training data
</span><span class="k">def</span> <span class="nf">prepare_ml_data</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> <span class="n">target_var</span><span class="o">=</span><span class="s">'total_precipitation'</span><span class="p">):</span>
    <span class="s">"""Convert xarray dataset to sklearn-compatible format."""</span>
    
    <span class="c1"># Stack spatial dimensions
</span>    <span class="n">stacked</span> <span class="o">=</span> <span class="n">data</span><span class="p">.</span><span class="n">stack</span><span class="p">(</span><span class="n">sample</span><span class="o">=</span><span class="p">(</span><span class="s">'time'</span><span class="p">,</span> <span class="s">'latitude'</span><span class="p">,</span> <span class="s">'longitude'</span><span class="p">))</span>
    
    <span class="c1"># Convert to DataFrame
</span>    <span class="n">df</span> <span class="o">=</span> <span class="n">stacked</span><span class="p">.</span><span class="n">to_dataframe</span><span class="p">().</span><span class="n">dropna</span><span class="p">()</span>
    
    <span class="c1"># Separate features and target
</span>    <span class="n">feature_cols</span> <span class="o">=</span> <span class="p">[</span><span class="n">col</span> <span class="k">for</span> <span class="n">col</span> <span class="ow">in</span> <span class="n">df</span><span class="p">.</span><span class="n">columns</span> <span class="k">if</span> <span class="n">col</span> <span class="o">!=</span> <span class="n">target_var</span><span class="p">]</span>
    <span class="n">X</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="n">feature_cols</span><span class="p">]</span>
    <span class="n">y</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="n">target_var</span><span class="p">]</span>
    
    <span class="k">return</span> <span class="n">X</span><span class="p">,</span> <span class="n">y</span>

<span class="n">X</span><span class="p">,</span> <span class="n">y</span> <span class="o">=</span> <span class="n">prepare_ml_data</span><span class="p">(</span><span class="n">enhanced_data</span><span class="p">)</span>

<span class="c1"># Split data
</span><span class="n">X_train</span><span class="p">,</span> <span class="n">X_test</span><span class="p">,</span> <span class="n">y_train</span><span class="p">,</span> <span class="n">y_test</span> <span class="o">=</span> <span class="n">train_test_split</span><span class="p">(</span>
    <span class="n">X</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">test_size</span><span class="o">=</span><span class="mf">0.2</span><span class="p">,</span> <span class="n">random_state</span><span class="o">=</span><span class="mi">42</span>
<span class="p">)</span>

<span class="c1"># Train Random Forest model
</span><span class="n">rf_model</span> <span class="o">=</span> <span class="n">RandomForestRegressor</span><span class="p">(</span>
    <span class="n">n_estimators</span><span class="o">=</span><span class="mi">100</span><span class="p">,</span>
    <span class="n">max_depth</span><span class="o">=</span><span class="mi">10</span><span class="p">,</span>
    <span class="n">random_state</span><span class="o">=</span><span class="mi">42</span><span class="p">,</span>
    <span class="n">n_jobs</span><span class="o">=-</span><span class="mi">1</span>
<span class="p">)</span>

<span class="n">rf_model</span><span class="p">.</span><span class="n">fit</span><span class="p">(</span><span class="n">X_train</span><span class="p">,</span> <span class="n">y_train</span><span class="p">)</span>

<span class="c1"># Make predictions
</span><span class="n">y_pred</span> <span class="o">=</span> <span class="n">rf_model</span><span class="p">.</span><span class="n">predict</span><span class="p">(</span><span class="n">X_test</span><span class="p">)</span>

<span class="c1"># Evaluate
</span><span class="n">rmse</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">sqrt</span><span class="p">(</span><span class="n">mean_squared_error</span><span class="p">(</span><span class="n">y_test</span><span class="p">,</span> <span class="n">y_pred</span><span class="p">))</span>
<span class="n">r2</span> <span class="o">=</span> <span class="n">r2_score</span><span class="p">(</span><span class="n">y_test</span><span class="p">,</span> <span class="n">y_pred</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="sa">f</span><span class="s">"RMSE: </span><span class="si">{</span><span class="n">rmse</span><span class="si">:</span><span class="p">.</span><span class="mi">4</span><span class="n">f</span><span class="si">}</span><span class="s">"</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="sa">f</span><span class="s">"R²: </span><span class="si">{</span><span class="n">r2</span><span class="si">:</span><span class="p">.</span><span class="mi">4</span><span class="n">f</span><span class="si">}</span><span class="s">"</span><span class="p">)</span>
</code></pre></div></div>

<h3 id="4-feature-importance-analysis">4. Feature Importance Analysis</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Analyze feature importance
</span><span class="n">feature_importance</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">DataFrame</span><span class="p">({</span>
    <span class="s">'feature'</span><span class="p">:</span> <span class="n">X</span><span class="p">.</span><span class="n">columns</span><span class="p">,</span>
    <span class="s">'importance'</span><span class="p">:</span> <span class="n">rf_model</span><span class="p">.</span><span class="n">feature_importances_</span>
<span class="p">}).</span><span class="n">sort_values</span><span class="p">(</span><span class="s">'importance'</span><span class="p">,</span> <span class="n">ascending</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>

<span class="n">plt</span><span class="p">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="mi">6</span><span class="p">))</span>
<span class="n">plt</span><span class="p">.</span><span class="n">barh</span><span class="p">(</span><span class="n">feature_importance</span><span class="p">[</span><span class="s">'feature'</span><span class="p">][:</span><span class="mi">10</span><span class="p">],</span> <span class="n">feature_importance</span><span class="p">[</span><span class="s">'importance'</span><span class="p">][:</span><span class="mi">10</span><span class="p">])</span>
<span class="n">plt</span><span class="p">.</span><span class="n">xlabel</span><span class="p">(</span><span class="s">'Feature Importance'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">title</span><span class="p">(</span><span class="s">'Top 10 Most Important Features for Precipitation Prediction'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">tight_layout</span><span class="p">()</span>
<span class="n">plt</span><span class="p">.</span><span class="n">show</span><span class="p">()</span>
</code></pre></div></div>

<h2 id="deep-learning-for-climate-data">Deep Learning for Climate Data</h2>

<p>For more complex patterns, deep learning can be powerful:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Build a simple neural network
</span><span class="n">model</span> <span class="o">=</span> <span class="n">keras</span><span class="p">.</span><span class="n">Sequential</span><span class="p">([</span>
    <span class="n">keras</span><span class="p">.</span><span class="n">layers</span><span class="p">.</span><span class="n">Dense</span><span class="p">(</span><span class="mi">128</span><span class="p">,</span> <span class="n">activation</span><span class="o">=</span><span class="s">'relu'</span><span class="p">,</span> <span class="n">input_shape</span><span class="o">=</span><span class="p">(</span><span class="n">X_train</span><span class="p">.</span><span class="n">shape</span><span class="p">[</span><span class="mi">1</span><span class="p">],)),</span>
    <span class="n">keras</span><span class="p">.</span><span class="n">layers</span><span class="p">.</span><span class="n">Dropout</span><span class="p">(</span><span class="mf">0.3</span><span class="p">),</span>
    <span class="n">keras</span><span class="p">.</span><span class="n">layers</span><span class="p">.</span><span class="n">Dense</span><span class="p">(</span><span class="mi">64</span><span class="p">,</span> <span class="n">activation</span><span class="o">=</span><span class="s">'relu'</span><span class="p">),</span>
    <span class="n">keras</span><span class="p">.</span><span class="n">layers</span><span class="p">.</span><span class="n">Dropout</span><span class="p">(</span><span class="mf">0.3</span><span class="p">),</span>
    <span class="n">keras</span><span class="p">.</span><span class="n">layers</span><span class="p">.</span><span class="n">Dense</span><span class="p">(</span><span class="mi">32</span><span class="p">,</span> <span class="n">activation</span><span class="o">=</span><span class="s">'relu'</span><span class="p">),</span>
    <span class="n">keras</span><span class="p">.</span><span class="n">layers</span><span class="p">.</span><span class="n">Dense</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
<span class="p">])</span>

<span class="n">model</span><span class="p">.</span><span class="nb">compile</span><span class="p">(</span>
    <span class="n">optimizer</span><span class="o">=</span><span class="s">'adam'</span><span class="p">,</span>
    <span class="n">loss</span><span class="o">=</span><span class="s">'mse'</span><span class="p">,</span>
    <span class="n">metrics</span><span class="o">=</span><span class="p">[</span><span class="s">'mae'</span><span class="p">]</span>
<span class="p">)</span>

<span class="c1"># Train the model
</span><span class="n">history</span> <span class="o">=</span> <span class="n">model</span><span class="p">.</span><span class="n">fit</span><span class="p">(</span>
    <span class="n">X_train</span><span class="p">,</span> <span class="n">y_train</span><span class="p">,</span>
    <span class="n">validation_split</span><span class="o">=</span><span class="mf">0.2</span><span class="p">,</span>
    <span class="n">epochs</span><span class="o">=</span><span class="mi">50</span><span class="p">,</span>
    <span class="n">batch_size</span><span class="o">=</span><span class="mi">32</span><span class="p">,</span>
    <span class="n">verbose</span><span class="o">=</span><span class="mi">1</span>
<span class="p">)</span>

<span class="c1"># Evaluate
</span><span class="n">nn_pred</span> <span class="o">=</span> <span class="n">model</span><span class="p">.</span><span class="n">predict</span><span class="p">(</span><span class="n">X_test</span><span class="p">)</span>
<span class="n">nn_rmse</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">sqrt</span><span class="p">(</span><span class="n">mean_squared_error</span><span class="p">(</span><span class="n">y_test</span><span class="p">,</span> <span class="n">nn_pred</span><span class="p">))</span>
<span class="k">print</span><span class="p">(</span><span class="sa">f</span><span class="s">"Neural Network RMSE: </span><span class="si">{</span><span class="n">nn_rmse</span><span class="si">:</span><span class="p">.</span><span class="mi">4</span><span class="n">f</span><span class="si">}</span><span class="s">"</span><span class="p">)</span>
</code></pre></div></div>

<h2 id="challenges-and-best-practices">Challenges and Best Practices</h2>

<h3 id="1-handling-missing-data">1. Handling Missing Data</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Interpolation for spatial gaps
</span><span class="n">data_filled</span> <span class="o">=</span> <span class="n">data</span><span class="p">.</span><span class="n">interpolate_na</span><span class="p">(</span><span class="n">dim</span><span class="o">=</span><span class="s">'latitude'</span><span class="p">,</span> <span class="n">method</span><span class="o">=</span><span class="s">'linear'</span><span class="p">)</span>

<span class="c1"># Forward fill for temporal gaps
</span><span class="n">data_filled</span> <span class="o">=</span> <span class="n">data_filled</span><span class="p">.</span><span class="n">fillna</span><span class="p">(</span><span class="n">method</span><span class="o">=</span><span class="s">'ffill'</span><span class="p">,</span> <span class="n">limit</span><span class="o">=</span><span class="mi">3</span><span class="p">)</span>
</code></pre></div></div>

<h3 id="2-cross-validation-with-time-series">2. Cross-Validation with Time Series</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="nn">sklearn.model_selection</span> <span class="kn">import</span> <span class="n">TimeSeriesSplit</span>

<span class="n">tscv</span> <span class="o">=</span> <span class="n">TimeSeriesSplit</span><span class="p">(</span><span class="n">n_splits</span><span class="o">=</span><span class="mi">5</span><span class="p">)</span>
<span class="n">cv_scores</span> <span class="o">=</span> <span class="p">[]</span>

<span class="k">for</span> <span class="n">train_idx</span><span class="p">,</span> <span class="n">val_idx</span> <span class="ow">in</span> <span class="n">tscv</span><span class="p">.</span><span class="n">split</span><span class="p">(</span><span class="n">X</span><span class="p">):</span>
    <span class="n">X_train_cv</span><span class="p">,</span> <span class="n">X_val_cv</span> <span class="o">=</span> <span class="n">X</span><span class="p">.</span><span class="n">iloc</span><span class="p">[</span><span class="n">train_idx</span><span class="p">],</span> <span class="n">X</span><span class="p">.</span><span class="n">iloc</span><span class="p">[</span><span class="n">val_idx</span><span class="p">]</span>
    <span class="n">y_train_cv</span><span class="p">,</span> <span class="n">y_val_cv</span> <span class="o">=</span> <span class="n">y</span><span class="p">.</span><span class="n">iloc</span><span class="p">[</span><span class="n">train_idx</span><span class="p">],</span> <span class="n">y</span><span class="p">.</span><span class="n">iloc</span><span class="p">[</span><span class="n">val_idx</span><span class="p">]</span>
    
    <span class="n">model</span><span class="p">.</span><span class="n">fit</span><span class="p">(</span><span class="n">X_train_cv</span><span class="p">,</span> <span class="n">y_train_cv</span><span class="p">)</span>
    <span class="n">score</span> <span class="o">=</span> <span class="n">model</span><span class="p">.</span><span class="n">score</span><span class="p">(</span><span class="n">X_val_cv</span><span class="p">,</span> <span class="n">y_val_cv</span><span class="p">)</span>
    <span class="n">cv_scores</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">score</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="sa">f</span><span class="s">"Cross-validation scores: </span><span class="si">{</span><span class="n">cv_scores</span><span class="si">}</span><span class="s">"</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="sa">f</span><span class="s">"Mean CV score: </span><span class="si">{</span><span class="n">np</span><span class="p">.</span><span class="n">mean</span><span class="p">(</span><span class="n">cv_scores</span><span class="p">)</span><span class="si">:</span><span class="p">.</span><span class="mi">4</span><span class="n">f</span><span class="si">}</span><span class="s"> ± </span><span class="si">{</span><span class="n">np</span><span class="p">.</span><span class="n">std</span><span class="p">(</span><span class="n">cv_scores</span><span class="p">)</span><span class="si">:</span><span class="p">.</span><span class="mi">4</span><span class="n">f</span><span class="si">}</span><span class="s">"</span><span class="p">)</span>
</code></pre></div></div>

<h3 id="3-dealing-with-scale-differences">3. Dealing with Scale Differences</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="nn">sklearn.preprocessing</span> <span class="kn">import</span> <span class="n">StandardScaler</span>

<span class="c1"># Normalize features
</span><span class="n">scaler</span> <span class="o">=</span> <span class="n">StandardScaler</span><span class="p">()</span>
<span class="n">X_scaled</span> <span class="o">=</span> <span class="n">scaler</span><span class="p">.</span><span class="n">fit_transform</span><span class="p">(</span><span class="n">X</span><span class="p">)</span>
</code></pre></div></div>

<h2 id="advanced-applications">Advanced Applications</h2>

<h3 id="convolutional-neural-networks-for-spatial-data">Convolutional Neural Networks for Spatial Data</h3>

<p>For gridded climate data, CNNs can capture spatial patterns:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Reshape data for CNN (samples, height, width, channels)
</span><span class="n">X_cnn</span> <span class="o">=</span> <span class="n">X_spatial</span><span class="p">.</span><span class="n">values</span><span class="p">.</span><span class="n">reshape</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="mi">64</span><span class="p">,</span> <span class="mi">128</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">feature_vars</span><span class="p">))</span>

<span class="c1"># Build CNN model
</span><span class="n">cnn_model</span> <span class="o">=</span> <span class="n">keras</span><span class="p">.</span><span class="n">Sequential</span><span class="p">([</span>
    <span class="n">keras</span><span class="p">.</span><span class="n">layers</span><span class="p">.</span><span class="n">Conv2D</span><span class="p">(</span><span class="mi">32</span><span class="p">,</span> <span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="mi">3</span><span class="p">),</span> <span class="n">activation</span><span class="o">=</span><span class="s">'relu'</span><span class="p">,</span> <span class="n">input_shape</span><span class="o">=</span><span class="p">(</span><span class="mi">64</span><span class="p">,</span> <span class="mi">128</span><span class="p">,</span> <span class="mi">5</span><span class="p">)),</span>
    <span class="n">keras</span><span class="p">.</span><span class="n">layers</span><span class="p">.</span><span class="n">MaxPooling2D</span><span class="p">((</span><span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">)),</span>
    <span class="n">keras</span><span class="p">.</span><span class="n">layers</span><span class="p">.</span><span class="n">Conv2D</span><span class="p">(</span><span class="mi">64</span><span class="p">,</span> <span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="mi">3</span><span class="p">),</span> <span class="n">activation</span><span class="o">=</span><span class="s">'relu'</span><span class="p">),</span>
    <span class="n">keras</span><span class="p">.</span><span class="n">layers</span><span class="p">.</span><span class="n">MaxPooling2D</span><span class="p">((</span><span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">)),</span>
    <span class="n">keras</span><span class="p">.</span><span class="n">layers</span><span class="p">.</span><span class="n">Conv2D</span><span class="p">(</span><span class="mi">64</span><span class="p">,</span> <span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="mi">3</span><span class="p">),</span> <span class="n">activation</span><span class="o">=</span><span class="s">'relu'</span><span class="p">),</span>
    <span class="n">keras</span><span class="p">.</span><span class="n">layers</span><span class="p">.</span><span class="n">Flatten</span><span class="p">(),</span>
    <span class="n">keras</span><span class="p">.</span><span class="n">layers</span><span class="p">.</span><span class="n">Dense</span><span class="p">(</span><span class="mi">64</span><span class="p">,</span> <span class="n">activation</span><span class="o">=</span><span class="s">'relu'</span><span class="p">),</span>
    <span class="n">keras</span><span class="p">.</span><span class="n">layers</span><span class="p">.</span><span class="n">Dense</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
<span class="p">])</span>
</code></pre></div></div>

<h3 id="lstm-for-time-series-prediction">LSTM for Time Series Prediction</h3>

<p>For capturing temporal dependencies:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Prepare sequence data
</span><span class="k">def</span> <span class="nf">create_sequences</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> <span class="n">seq_length</span><span class="o">=</span><span class="mi">10</span><span class="p">):</span>
    <span class="n">X</span><span class="p">,</span> <span class="n">y</span> <span class="o">=</span> <span class="p">[],</span> <span class="p">[]</span>
    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">data</span><span class="p">)</span> <span class="o">-</span> <span class="n">seq_length</span><span class="p">):</span>
        <span class="n">X</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">data</span><span class="p">[</span><span class="n">i</span><span class="p">:(</span><span class="n">i</span> <span class="o">+</span> <span class="n">seq_length</span><span class="p">)])</span>
        <span class="n">y</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">data</span><span class="p">[</span><span class="n">i</span> <span class="o">+</span> <span class="n">seq_length</span><span class="p">])</span>
    <span class="k">return</span> <span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">(</span><span class="n">X</span><span class="p">),</span> <span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">(</span><span class="n">y</span><span class="p">)</span>

<span class="n">X_seq</span><span class="p">,</span> <span class="n">y_seq</span> <span class="o">=</span> <span class="n">create_sequences</span><span class="p">(</span><span class="n">time_series_data</span><span class="p">)</span>

<span class="c1"># LSTM model
</span><span class="n">lstm_model</span> <span class="o">=</span> <span class="n">keras</span><span class="p">.</span><span class="n">Sequential</span><span class="p">([</span>
    <span class="n">keras</span><span class="p">.</span><span class="n">layers</span><span class="p">.</span><span class="n">LSTM</span><span class="p">(</span><span class="mi">50</span><span class="p">,</span> <span class="n">return_sequences</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span> <span class="n">input_shape</span><span class="o">=</span><span class="p">(</span><span class="n">seq_length</span><span class="p">,</span> <span class="n">n_features</span><span class="p">)),</span>
    <span class="n">keras</span><span class="p">.</span><span class="n">layers</span><span class="p">.</span><span class="n">LSTM</span><span class="p">(</span><span class="mi">50</span><span class="p">,</span> <span class="n">return_sequences</span><span class="o">=</span><span class="bp">False</span><span class="p">),</span>
    <span class="n">keras</span><span class="p">.</span><span class="n">layers</span><span class="p">.</span><span class="n">Dense</span><span class="p">(</span><span class="mi">25</span><span class="p">),</span>
    <span class="n">keras</span><span class="p">.</span><span class="n">layers</span><span class="p">.</span><span class="n">Dense</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
<span class="p">])</span>
</code></pre></div></div>

<h2 id="evaluation-and-interpretation">Evaluation and Interpretation</h2>

<h3 id="model-explainability">Model Explainability</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">shap</span>

<span class="c1"># SHAP values for model interpretation
</span><span class="n">explainer</span> <span class="o">=</span> <span class="n">shap</span><span class="p">.</span><span class="n">TreeExplainer</span><span class="p">(</span><span class="n">rf_model</span><span class="p">)</span>
<span class="n">shap_values</span> <span class="o">=</span> <span class="n">explainer</span><span class="p">.</span><span class="n">shap_values</span><span class="p">(</span><span class="n">X_test</span><span class="p">[:</span><span class="mi">100</span><span class="p">])</span>

<span class="c1"># Plot SHAP summary
</span><span class="n">shap</span><span class="p">.</span><span class="n">summary_plot</span><span class="p">(</span><span class="n">shap_values</span><span class="p">,</span> <span class="n">X_test</span><span class="p">[:</span><span class="mi">100</span><span class="p">])</span>
</code></pre></div></div>

<h3 id="physical-consistency-checks">Physical Consistency Checks</h3>

<p>Always validate that your ML model results make physical sense:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Check if predictions follow physical laws
</span><span class="k">def</span> <span class="nf">validate_physics</span><span class="p">(</span><span class="n">predictions</span><span class="p">,</span> <span class="n">inputs</span><span class="p">):</span>
    <span class="s">"""Check basic physical consistency."""</span>
    
    <span class="c1"># Example: Precipitation should increase with humidity
</span>    <span class="n">humidity</span> <span class="o">=</span> <span class="n">inputs</span><span class="p">[</span><span class="s">'relative_humidity'</span><span class="p">]</span>
    <span class="n">precip</span> <span class="o">=</span> <span class="n">predictions</span>
    
    <span class="n">correlation</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">corrcoef</span><span class="p">(</span><span class="n">humidity</span><span class="p">,</span> <span class="n">precip</span><span class="p">)[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">]</span>
    <span class="k">assert</span> <span class="n">correlation</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">,</span> <span class="s">"Precipitation should correlate positively with humidity"</span>
    
    <span class="k">return</span> <span class="bp">True</span>
</code></pre></div></div>

<h2 id="resources-and-next-steps">Resources and Next Steps</h2>

<h3 id="recommended-reading">Recommended Reading</h3>
<ul>
  <li>“Deep Learning for the Earth Sciences” by Reichstein et al.</li>
  <li>“Machine Learning in Python for Climate Science” by Huntingford et al.</li>
  <li>“AI for Earth” Microsoft documentation</li>
</ul>

<h3 id="datasets">Datasets</h3>
<ul>
  <li><a href="https://cds.climate.copernicus.eu/">Climate Data Store</a></li>
  <li><a href="https://giovanni.gsfc.nasa.gov/">NASA Giovanni</a></li>
  <li><a href="https://psl.noaa.gov/data/">NOAA Physical Sciences Laboratory</a></li>
</ul>

<h3 id="code-repositories">Code Repositories</h3>
<ul>
  <li><a href="https://github.com/climate-ml/examples">Climate ML Examples</a></li>
  <li><a href="https://gallery.pangeo.io/">Pangeo Gallery</a></li>
</ul>

<h2 id="conclusion">Conclusion</h2>

<p>Machine learning offers powerful tools for climate science research, but success requires:</p>
<ol>
  <li>Understanding both the climate science and ML fundamentals</li>
  <li>Careful data preprocessing and feature engineering</li>
  <li>Appropriate validation strategies</li>
  <li>Physical interpretation of results</li>
</ol>

<p>The combination of domain expertise and ML techniques can lead to breakthrough insights in our understanding of the climate system.</p>

<p>In my next post, I’ll dive deeper into specific applications like tropical cyclone tracking and seasonal forecasting. Stay tuned!</p>

<hr />

<p><em>Have questions about applying ML to your climate research? Feel free to reach out via <a href="mailto:xianpuji@hhu.edu.cn">email</a> or connect with me on <a href="https://twitter.com/">Twitter</a>.</em></p>]]></content><author><name>Your Name</name></author><category term="jekyll-blog-template" /><category term="research" /><category term="machine-learning" /><category term="python" /><category term="tensorflow" /><category term="climate-modeling" /><category term="tutorial" /><summary type="html"><![CDATA[An introduction to applying machine learning techniques in climate science research, with practical examples and code snippets.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://blissful-jasper.github.io/assets/images/posts/ml-climate-intro.jpg" /><media:content medium="image" url="https://blissful-jasper.github.io/assets/images/posts/ml-climate-intro.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">关于重编译WRF时的一些建议</title><link href="https://blissful-jasper.github.io/%E6%8A%80%E6%9C%AF/wrf/2024/01/10/Tips-for-WRF-recompile/" rel="alternate" type="text/html" title="关于重编译WRF时的一些建议" /><published>2024-01-10T00:00:00+00:00</published><updated>2024-01-10T00:00:00+00:00</updated><id>https://blissful-jasper.github.io/%E6%8A%80%E6%9C%AF/wrf/2024/01/10/Tips-for-WRF-recompile</id><content type="html" xml:base="https://blissful-jasper.github.io/%E6%8A%80%E6%9C%AF/wrf/2024/01/10/Tips-for-WRF-recompile/"><![CDATA[<h1 id="关于重编译wrf时的一些建议">关于重编译wrf时的一些建议</h1>

<p>通常，我们进行一些敏感性实验时，需要修改WRF自带的源代码。比如:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>In this study, no specific radiation scheme available in the WRFv2.1.1 package was employed. Rather, a constant radiational cooling of 
-0.5 K / day was applied at all vertical model levels. (Gall and Frank,2009)
</code></pre></div></div>

<p>上述一篇文献中作者就修改了WRF的辐射方案为一个固定的常数，-0.5 k $day^{-1}$,这肯定就需要修改WRF源代码中关于辐射变量相关的计算代码了。</p>

<p>https://github.com/wrf-model/WRF/blob/master/phys/module_radiation_driver.F</p>

<p>修改之后，需要重新编译WRF，使其运行时生效。那么，这就涉及到编译的速度，一般来说，完整的编译一次WRF大概需要半小时左右，这无疑是比较浪费时间的，仅仅就调整源代码的参数来说，其实完全没有必要清除所有的历史记录后编译，下面是一些建议：</p>

<h1 id="如何快速的编译wrf">如何快速的编译WRF</h1>

<h2 id="编译的次序">编译的次序</h2>

<ul>
  <li>
    <p>当您重新编译时，您是仅仅编译，还是进行了<code class="language-plaintext highlighter-rouge">clean-a</code>，然后重新配置(configure)，然后重新编译(compile)？
<img src="image.png" alt="Alt text" /></p>
  </li>
  <li>
    <p>对于物理参数的修改，不需要clean/configure。您可以直接编译，而且通常比原始的完整编译更快。</p>
  </li>
</ul>

<h2 id="编译器的选择">编译器的选择</h2>

<ul>
  <li>
    <p>如果您碰巧使用的是 Intel编译器，那么编译将花费相当长的时间，即使是重新编译也是如此。</p>
  </li>
  <li>
    <p>GNU (gfortran)编译速度快得多(而且它是一个免费的编译器)。即使您最终希望使用 Intel，为了修改代码和编译以测试准确性，切换到 GNU 也是值得的，这样您就可以进行快速编译，直到您对所有修改都满意为止。</p>
  </li>
</ul>

<h2 id="多处理器并行编译">多处理器并行编译</h2>

<p>可以使用多个处理器进行编译。其中，最多4个处理器是一个很好的使用数字(再多的话，就会有些平稳)。在编译之前，您可以设置:</p>

<div class="language-fortran highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="w">
</span><span class="n">setenv</span><span class="w"> </span><span class="n">J</span><span class="w"> </span><span class="s2">"-j 4"</span><span class="w">

</span></code></pre></div></div>
<p>(csh e.g.), or</p>

<div class="language-fortran highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="w">
</span><span class="n">export</span><span class="w"> </span><span class="n">J</span><span class="o">=</span><span class="s2">"-j 4"</span><span class="w">

</span></code></pre></div></div>
<p>(bash e.g.)</p>

<p>因此，当你只是修改了源代码中的一些物理参数时，完全可以只进行编译，而不需要配置后在编译，亲测这样所用的时间大概在5min左右，非常快捷！</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
./compile em_real <span class="o">&gt;</span>&amp; compile.log


</code></pre></div></div>

<p>或者将其放在后台</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="nb">nohup</span> ./compile em_real <span class="o">&gt;</span>&amp; compile.log &amp;

</code></pre></div></div>

<hr />

<p>参考：</p>

<p>https://forum.mmm.ucar.edu/threads/quick-wrf-compilation-after-modifying-some-parameters-in-the-land-surface-model.5526/</p>]]></content><author><name>Xianpu Ji</name><email>xianpuji@hhu.edu.cn</email></author><category term="技术" /><category term="WRF" /><category term="WRF" /><category term="编译" /><category term="源代码修改" /><category term="数值模拟" /><summary type="html"><![CDATA[关于重编译wrf时的一些建议]]></summary></entry><entry><title type="html">Understanding Tropical Waves: Kelvin Waves and the MJO</title><link href="https://blissful-jasper.github.io/jekyll-blog-template/research/climate/2024/01/10/tropical-waves-kelvin-mjo/" rel="alternate" type="text/html" title="Understanding Tropical Waves: Kelvin Waves and the MJO" /><published>2024-01-10T00:00:00+00:00</published><updated>2024-01-10T00:00:00+00:00</updated><id>https://blissful-jasper.github.io/jekyll-blog-template/research/climate/2024/01/10/tropical-waves-kelvin-mjo</id><content type="html" xml:base="https://blissful-jasper.github.io/jekyll-blog-template/research/climate/2024/01/10/tropical-waves-kelvin-mjo/"><![CDATA[<p>Tropical waves are among the most fascinating phenomena in atmospheric science. These large-scale disturbances shape weather patterns across the globe, influencing everything from monsoons to hurricanes. Today, I want to share insights from my recent research on two particularly important types of tropical waves: Kelvin waves and the Madden-Julian Oscillation (MJO).</p>

<h2 id="what-are-tropical-waves">What Are Tropical Waves?</h2>

<p>Tropical waves are organized disturbances in the tropical atmosphere that propagate across ocean basins. Unlike mid-latitude weather systems that are driven by temperature gradients, tropical waves are primarily driven by:</p>

<ul>
  <li><strong>Convective heating</strong>: Latent heat release from thunderstorms</li>
  <li><strong>Wave dynamics</strong>: Mathematical solutions to atmospheric equations</li>
  <li><strong>Air-sea interactions</strong>: Exchange of heat and moisture with the ocean</li>
</ul>

<p>These waves play crucial roles in:</p>
<ul>
  <li>Tropical cyclone formation</li>
  <li>Monsoon variability</li>
  <li>Global circulation patterns</li>
  <li>Climate oscillations</li>
</ul>

<h2 id="kelvin-waves-the-equatorial-express">Kelvin Waves: The Equatorial Express</h2>

<h3 id="basic-physics">Basic Physics</h3>

<p>Kelvin waves are a special type of atmospheric wave that exists near the equator. Named after Lord Kelvin, they have unique properties:</p>

<ol>
  <li><strong>Equatorially trapped</strong>: Maximum amplitude at the equator, decreasing poleward</li>
  <li><strong>Eastward propagating</strong>: Travel from west to east at typical speeds of 15-17 m/s</li>
  <li><strong>No meridional velocity</strong>: Wind only blows east-west at the equator</li>
  <li><strong>Geostrophic balance</strong>: Pressure gradient balanced by Coriolis force</li>
</ol>

<h3 id="mathematical-description">Mathematical Description</h3>

<p>The governing equations for equatorial Kelvin waves can be derived from the shallow water equations:</p>

\[\frac{\partial u}{\partial t} - \beta y v = -g \frac{\partial h}{\partial x}\]

\[\frac{\partial v}{\partial t} + \beta y u = -g \frac{\partial h}{\partial y}\]

\[\frac{\partial h}{\partial t} + H \left(\frac{\partial u}{\partial x} + \frac{\partial v}{\partial y}\right) = 0\]

<p>For Kelvin waves, we assume $v = 0$ at the equator, leading to solutions of the form:</p>

\[u = u_0 \exp\left(-\frac{\beta y^2}{2c}\right) \cos(kx - \omega t)\]

\[h = \frac{c}{g} u_0 \exp\left(-\frac{\beta y^2}{2c}\right) \cos(kx - \omega t)\]

<p>where $c = \sqrt{gH}$ is the wave speed.</p>

<h3 id="observational-examples">Observational Examples</h3>

<p>Let’s look at how to identify Kelvin waves in observational data:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>
<span class="kn">import</span> <span class="nn">xarray</span> <span class="k">as</span> <span class="n">xr</span>
<span class="kn">from</span> <span class="nn">scipy</span> <span class="kn">import</span> <span class="n">signal</span>

<span class="c1"># Load zonal wind data from ERA5
</span><span class="n">ds</span> <span class="o">=</span> <span class="n">xr</span><span class="p">.</span><span class="n">open_dataset</span><span class="p">(</span><span class="s">'era5_u_component.nc'</span><span class="p">)</span>
<span class="n">u_wind</span> <span class="o">=</span> <span class="n">ds</span><span class="p">[</span><span class="s">'u'</span><span class="p">].</span><span class="n">sel</span><span class="p">(</span><span class="n">level</span><span class="o">=</span><span class="mi">850</span><span class="p">,</span> <span class="n">latitude</span><span class="o">=</span><span class="nb">slice</span><span class="p">(</span><span class="o">-</span><span class="mi">10</span><span class="p">,</span> <span class="mi">10</span><span class="p">))</span>

<span class="c1"># Time-longitude plot (Hovmöller diagram)
</span><span class="k">def</span> <span class="nf">plot_hovmoller</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> <span class="n">title</span><span class="p">):</span>
    <span class="n">fig</span><span class="p">,</span> <span class="n">ax</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="n">subplots</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">12</span><span class="p">,</span> <span class="mi">6</span><span class="p">))</span>
    
    <span class="c1"># Average over equatorial band
</span>    <span class="n">data_eq</span> <span class="o">=</span> <span class="n">data</span><span class="p">.</span><span class="n">sel</span><span class="p">(</span><span class="n">latitude</span><span class="o">=</span><span class="nb">slice</span><span class="p">(</span><span class="o">-</span><span class="mi">5</span><span class="p">,</span> <span class="mi">5</span><span class="p">)).</span><span class="n">mean</span><span class="p">(</span><span class="s">'latitude'</span><span class="p">)</span>
    
    <span class="c1"># Create Hovmöller plot
</span>    <span class="n">im</span> <span class="o">=</span> <span class="n">ax</span><span class="p">.</span><span class="n">contourf</span><span class="p">(</span><span class="n">data_eq</span><span class="p">.</span><span class="n">longitude</span><span class="p">,</span> <span class="n">data_eq</span><span class="p">.</span><span class="n">time</span><span class="p">,</span> <span class="n">data_eq</span><span class="p">,</span> 
                     <span class="n">levels</span><span class="o">=</span><span class="mi">20</span><span class="p">,</span> <span class="n">cmap</span><span class="o">=</span><span class="s">'RdBu_r'</span><span class="p">,</span> <span class="n">extend</span><span class="o">=</span><span class="s">'both'</span><span class="p">)</span>
    
    <span class="n">ax</span><span class="p">.</span><span class="n">set_xlabel</span><span class="p">(</span><span class="s">'Longitude (°E)'</span><span class="p">)</span>
    <span class="n">ax</span><span class="p">.</span><span class="n">set_ylabel</span><span class="p">(</span><span class="s">'Time'</span><span class="p">)</span>
    <span class="n">ax</span><span class="p">.</span><span class="n">set_title</span><span class="p">(</span><span class="n">title</span><span class="p">)</span>
    <span class="n">plt</span><span class="p">.</span><span class="n">colorbar</span><span class="p">(</span><span class="n">im</span><span class="p">,</span> <span class="n">ax</span><span class="o">=</span><span class="n">ax</span><span class="p">,</span> <span class="n">label</span><span class="o">=</span><span class="s">'Zonal Wind (m/s)'</span><span class="p">)</span>
    
    <span class="k">return</span> <span class="n">fig</span><span class="p">,</span> <span class="n">ax</span>

<span class="c1"># Plot the Hovmöller diagram
</span><span class="n">fig</span><span class="p">,</span> <span class="n">ax</span> <span class="o">=</span> <span class="n">plot_hovmoller</span><span class="p">(</span><span class="n">u_wind</span><span class="p">,</span> <span class="s">'Equatorial Zonal Wind - Kelvin Wave Detection'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">show</span><span class="p">()</span>
</code></pre></div></div>

<h3 id="filtering-for-kelvin-waves">Filtering for Kelvin Waves</h3>

<p>To isolate Kelvin waves from other tropical disturbances:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">kelvin_wave_filter</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> <span class="n">min_period</span><span class="o">=</span><span class="mf">2.5</span><span class="p">,</span> <span class="n">max_period</span><span class="o">=</span><span class="mi">30</span><span class="p">,</span> <span class="n">min_speed</span><span class="o">=</span><span class="mi">8</span><span class="p">,</span> <span class="n">max_speed</span><span class="o">=</span><span class="mi">50</span><span class="p">):</span>
    <span class="s">"""
    Filter data to isolate Kelvin wave signals.
    
    Parameters:
    - min_period, max_period: Period range in days
    - min_speed, max_speed: Eastward phase speed range in m/s
    """</span>
    
    <span class="c1"># Convert to frequency-wavenumber space
</span>    <span class="n">fft_data</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">fft</span><span class="p">.</span><span class="n">fft2</span><span class="p">(</span><span class="n">data</span><span class="p">)</span>
    
    <span class="c1"># Define frequency and wavenumber arrays
</span>    <span class="n">nt</span><span class="p">,</span> <span class="n">nx</span> <span class="o">=</span> <span class="n">data</span><span class="p">.</span><span class="n">shape</span>
    <span class="n">dt</span> <span class="o">=</span> <span class="mi">1</span>  <span class="c1"># daily data
</span>    <span class="n">dx</span> <span class="o">=</span> <span class="mf">2.5</span>  <span class="c1"># 2.5 degree longitude spacing
</span>    
    <span class="n">freqs</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">fft</span><span class="p">.</span><span class="n">fftfreq</span><span class="p">(</span><span class="n">nt</span><span class="p">,</span> <span class="n">dt</span><span class="p">)</span>
    <span class="n">kx</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">fft</span><span class="p">.</span><span class="n">fftfreq</span><span class="p">(</span><span class="n">nx</span><span class="p">,</span> <span class="n">dx</span><span class="p">)</span>
    
    <span class="c1"># Create filter in frequency-wavenumber space
</span>    <span class="n">freq_2d</span><span class="p">,</span> <span class="n">kx_2d</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">meshgrid</span><span class="p">(</span><span class="n">freqs</span><span class="p">,</span> <span class="n">kx</span><span class="p">,</span> <span class="n">indexing</span><span class="o">=</span><span class="s">'ij'</span><span class="p">)</span>
    
    <span class="c1"># Calculate phase speed
</span>    <span class="n">phase_speed</span> <span class="o">=</span> <span class="n">freq_2d</span> <span class="o">/</span> <span class="n">kx_2d</span>
    
    <span class="c1"># Apply Kelvin wave criteria
</span>    <span class="n">kelvin_mask</span> <span class="o">=</span> <span class="p">(</span>
        <span class="p">(</span><span class="mi">1</span><span class="o">/</span><span class="n">max_period</span> <span class="o">&lt;=</span> <span class="n">np</span><span class="p">.</span><span class="nb">abs</span><span class="p">(</span><span class="n">freq_2d</span><span class="p">))</span> <span class="o">&amp;</span> <span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="nb">abs</span><span class="p">(</span><span class="n">freq_2d</span><span class="p">)</span> <span class="o">&lt;=</span> <span class="mi">1</span><span class="o">/</span><span class="n">min_period</span><span class="p">)</span> <span class="o">&amp;</span>  <span class="c1"># Period range
</span>        <span class="p">(</span><span class="n">min_speed</span> <span class="o">&lt;=</span> <span class="n">phase_speed</span><span class="p">)</span> <span class="o">&amp;</span> <span class="p">(</span><span class="n">phase_speed</span> <span class="o">&lt;=</span> <span class="n">max_speed</span><span class="p">)</span> <span class="o">&amp;</span>  <span class="c1"># Speed range
</span>        <span class="p">(</span><span class="n">freq_2d</span> <span class="o">*</span> <span class="n">kx_2d</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span>  <span class="c1"># Eastward propagation
</span>    <span class="p">)</span>
    
    <span class="c1"># Apply filter
</span>    <span class="n">fft_filtered</span> <span class="o">=</span> <span class="n">fft_data</span> <span class="o">*</span> <span class="n">kelvin_mask</span>
    <span class="n">kelvin_signal</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">real</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">fft</span><span class="p">.</span><span class="n">ifft2</span><span class="p">(</span><span class="n">fft_filtered</span><span class="p">))</span>
    
    <span class="k">return</span> <span class="n">kelvin_signal</span>
</code></pre></div></div>

<h2 id="the-madden-julian-oscillation-mjo">The Madden-Julian Oscillation (MJO)</h2>

<h3 id="what-makes-the-mjo-special">What Makes the MJO Special?</h3>

<p>The MJO is the dominant mode of intraseasonal variability in the tropical atmosphere, with several unique characteristics:</p>

<ul>
  <li><strong>30-90 day period</strong>: Much longer than typical weather disturbances</li>
  <li><strong>Eastward propagation</strong>: Moves at ~5 m/s around the equator</li>
  <li><strong>Planetary scale</strong>: Spans 12,000-20,000 km</li>
  <li><strong>Coupled convection</strong>: Links deep convection with circulation</li>
</ul>

<h3 id="mjo-structure-and-dynamics">MJO Structure and Dynamics</h3>

<p>The MJO consists of:</p>

<ol>
  <li><strong>Enhanced convection</strong>: Active phase with increased rainfall</li>
  <li><strong>Suppressed convection</strong>: Inactive phase with reduced rainfall</li>
  <li><strong>Circulation anomalies</strong>: Large-scale wind and pressure patterns</li>
  <li><strong>Moisture variations</strong>: Changes in atmospheric water vapor</li>
</ol>

<h3 id="real-time-mjo-monitoring">Real-Time MJO Monitoring</h3>

<p>The MJO is commonly tracked using the Real-time Multivariate MJO (RMM) index:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">calculate_rmm_index</span><span class="p">(</span><span class="n">olr_data</span><span class="p">,</span> <span class="n">u850_data</span><span class="p">,</span> <span class="n">u200_data</span><span class="p">):</span>
    <span class="s">"""
    Calculate the Real-time Multivariate MJO index.
    
    Parameters:
    - olr_data: Outgoing Longwave Radiation
    - u850_data: Zonal wind at 850 hPa
    - u200_data: Zonal wind at 200 hPa
    """</span>
    
    <span class="c1"># Remove annual cycle and standardize
</span>    <span class="k">def</span> <span class="nf">remove_annual_cycle</span><span class="p">(</span><span class="n">data</span><span class="p">):</span>
        <span class="n">climatology</span> <span class="o">=</span> <span class="n">data</span><span class="p">.</span><span class="n">groupby</span><span class="p">(</span><span class="s">'time.dayofyear'</span><span class="p">).</span><span class="n">mean</span><span class="p">(</span><span class="s">'time'</span><span class="p">)</span>
        <span class="n">anomaly</span> <span class="o">=</span> <span class="n">data</span><span class="p">.</span><span class="n">groupby</span><span class="p">(</span><span class="s">'time.dayofyear'</span><span class="p">)</span> <span class="o">-</span> <span class="n">climatology</span>
        <span class="k">return</span> <span class="n">anomaly</span> <span class="o">/</span> <span class="n">anomaly</span><span class="p">.</span><span class="n">std</span><span class="p">(</span><span class="s">'time'</span><span class="p">)</span>
    
    <span class="n">olr_anom</span> <span class="o">=</span> <span class="n">remove_annual_cycle</span><span class="p">(</span><span class="n">olr_data</span><span class="p">)</span>
    <span class="n">u850_anom</span> <span class="o">=</span> <span class="n">remove_annual_cycle</span><span class="p">(</span><span class="n">u850_data</span><span class="p">)</span>
    <span class="n">u200_anom</span> <span class="o">=</span> <span class="n">remove_annual_cycle</span><span class="p">(</span><span class="n">u200_data</span><span class="p">)</span>
    
    <span class="c1"># Combine variables
</span>    <span class="n">combined_data</span> <span class="o">=</span> <span class="n">xr</span><span class="p">.</span><span class="n">concat</span><span class="p">([</span><span class="n">olr_anom</span><span class="p">,</span> <span class="n">u850_anom</span><span class="p">,</span> <span class="n">u200_anom</span><span class="p">],</span> <span class="n">dim</span><span class="o">=</span><span class="s">'variable'</span><span class="p">)</span>
    
    <span class="c1"># Apply EOF analysis
</span>    <span class="kn">from</span> <span class="nn">sklearn.decomposition</span> <span class="kn">import</span> <span class="n">PCA</span>
    
    <span class="c1"># Reshape for PCA
</span>    <span class="n">data_reshaped</span> <span class="o">=</span> <span class="n">combined_data</span><span class="p">.</span><span class="n">stack</span><span class="p">(</span><span class="n">space</span><span class="o">=</span><span class="p">(</span><span class="s">'longitude'</span><span class="p">,</span> <span class="s">'latitude'</span><span class="p">)).</span><span class="n">T</span>
    
    <span class="c1"># Perform PCA
</span>    <span class="n">pca</span> <span class="o">=</span> <span class="n">PCA</span><span class="p">(</span><span class="n">n_components</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span>
    <span class="n">mjo_pcs</span> <span class="o">=</span> <span class="n">pca</span><span class="p">.</span><span class="n">fit_transform</span><span class="p">(</span><span class="n">data_reshaped</span><span class="p">)</span>
    
    <span class="c1"># Calculate RMM indices
</span>    <span class="n">rmm1</span> <span class="o">=</span> <span class="n">mjo_pcs</span><span class="p">[:,</span> <span class="mi">0</span><span class="p">]</span>
    <span class="n">rmm2</span> <span class="o">=</span> <span class="n">mjo_pcs</span><span class="p">[:,</span> <span class="mi">1</span><span class="p">]</span>
    
    <span class="c1"># Calculate amplitude and phase
</span>    <span class="n">amplitude</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">sqrt</span><span class="p">(</span><span class="n">rmm1</span><span class="o">**</span><span class="mi">2</span> <span class="o">+</span> <span class="n">rmm2</span><span class="o">**</span><span class="mi">2</span><span class="p">)</span>
    <span class="n">phase</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">arctan2</span><span class="p">(</span><span class="n">rmm2</span><span class="p">,</span> <span class="n">rmm1</span><span class="p">)</span> <span class="o">*</span> <span class="mi">180</span> <span class="o">/</span> <span class="n">np</span><span class="p">.</span><span class="n">pi</span>
    <span class="n">phase</span><span class="p">[</span><span class="n">phase</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">]</span> <span class="o">+=</span> <span class="mi">360</span>
    
    <span class="k">return</span> <span class="n">rmm1</span><span class="p">,</span> <span class="n">rmm2</span><span class="p">,</span> <span class="n">amplitude</span><span class="p">,</span> <span class="n">phase</span>
</code></pre></div></div>

<h3 id="mjo-phase-diagram">MJO Phase Diagram</h3>

<p>The MJO is often visualized in phase space:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">plot_mjo_phase_diagram</span><span class="p">(</span><span class="n">rmm1</span><span class="p">,</span> <span class="n">rmm2</span><span class="p">,</span> <span class="n">dates</span><span class="p">):</span>
    <span class="s">"""Plot MJO evolution in phase space."""</span>
    
    <span class="n">fig</span><span class="p">,</span> <span class="n">ax</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="n">subplots</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="mi">10</span><span class="p">),</span> <span class="n">subplot_kw</span><span class="o">=</span><span class="nb">dict</span><span class="p">(</span><span class="n">projection</span><span class="o">=</span><span class="s">'polar'</span><span class="p">))</span>
    
    <span class="c1"># Convert RMM to polar coordinates
</span>    <span class="n">amplitude</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">sqrt</span><span class="p">(</span><span class="n">rmm1</span><span class="o">**</span><span class="mi">2</span> <span class="o">+</span> <span class="n">rmm2</span><span class="o">**</span><span class="mi">2</span><span class="p">)</span>
    <span class="n">phase</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">arctan2</span><span class="p">(</span><span class="n">rmm2</span><span class="p">,</span> <span class="n">rmm1</span><span class="p">)</span>
    
    <span class="c1"># Plot trajectory
</span>    <span class="n">colors</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="n">cm</span><span class="p">.</span><span class="n">viridis</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">linspace</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">dates</span><span class="p">)))</span>
    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">dates</span><span class="p">)</span><span class="o">-</span><span class="mi">1</span><span class="p">):</span>
        <span class="n">ax</span><span class="p">.</span><span class="n">plot</span><span class="p">([</span><span class="n">phase</span><span class="p">[</span><span class="n">i</span><span class="p">],</span> <span class="n">phase</span><span class="p">[</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">]],</span> <span class="p">[</span><span class="n">amplitude</span><span class="p">[</span><span class="n">i</span><span class="p">],</span> <span class="n">amplitude</span><span class="p">[</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">]],</span> 
                <span class="n">color</span><span class="o">=</span><span class="n">colors</span><span class="p">[</span><span class="n">i</span><span class="p">],</span> <span class="n">linewidth</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span>
    
    <span class="c1"># Add phase labels
</span>    <span class="n">phases</span> <span class="o">=</span> <span class="p">[</span><span class="s">'Indian Ocean'</span><span class="p">,</span> <span class="s">'Maritime Continent'</span><span class="p">,</span> <span class="s">'Western Pacific'</span><span class="p">,</span> 
              <span class="s">'Central Pacific'</span><span class="p">,</span> <span class="s">'Eastern Pacific'</span><span class="p">,</span> <span class="s">'Africa'</span><span class="p">,</span> <span class="s">'Western Hemisphere'</span><span class="p">]</span>
    
    <span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="n">label</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">phases</span><span class="p">):</span>
        <span class="n">angle</span> <span class="o">=</span> <span class="n">i</span> <span class="o">*</span> <span class="mi">2</span> <span class="o">*</span> <span class="n">np</span><span class="p">.</span><span class="n">pi</span> <span class="o">/</span> <span class="mi">8</span>
        <span class="n">ax</span><span class="p">.</span><span class="n">text</span><span class="p">(</span><span class="n">angle</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="n">label</span><span class="p">,</span> <span class="n">rotation</span><span class="o">=</span><span class="n">np</span><span class="p">.</span><span class="n">degrees</span><span class="p">(</span><span class="n">angle</span><span class="p">)</span><span class="o">-</span><span class="mi">90</span><span class="p">,</span> 
                <span class="n">ha</span><span class="o">=</span><span class="s">'center'</span><span class="p">,</span> <span class="n">va</span><span class="o">=</span><span class="s">'center'</span><span class="p">)</span>
    
    <span class="c1"># Add amplitude circles
</span>    <span class="n">ax</span><span class="p">.</span><span class="n">set_ylim</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">3</span><span class="p">)</span>
    <span class="n">ax</span><span class="p">.</span><span class="n">set_title</span><span class="p">(</span><span class="s">'MJO Phase Diagram'</span><span class="p">,</span> <span class="n">pad</span><span class="o">=</span><span class="mi">20</span><span class="p">)</span>
    
    <span class="k">return</span> <span class="n">fig</span><span class="p">,</span> <span class="n">ax</span>
</code></pre></div></div>

<h2 id="interactions-between-waves">Interactions Between Waves</h2>

<h3 id="kelvin-waves-and-the-mjo">Kelvin Waves and the MJO</h3>

<p>Recent research has revealed important interactions between these wave types:</p>

<ol>
  <li><strong>MJO initiation</strong>: Kelvin waves can trigger MJO events</li>
  <li><strong>Wave modulation</strong>: The MJO modulates Kelvin wave activity</li>
  <li><strong>Scale interactions</strong>: Energy transfer between different scales</li>
</ol>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">analyze_wave_interactions</span><span class="p">(</span><span class="n">kelvin_data</span><span class="p">,</span> <span class="n">mjo_data</span><span class="p">):</span>
    <span class="s">"""Analyze interactions between Kelvin waves and MJO."""</span>
    
    <span class="c1"># Calculate cross-correlation
</span>    <span class="kn">from</span> <span class="nn">scipy.stats</span> <span class="kn">import</span> <span class="n">pearsonr</span>
    
    <span class="n">correlations</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="n">lags</span> <span class="o">=</span> <span class="nb">range</span><span class="p">(</span><span class="o">-</span><span class="mi">30</span><span class="p">,</span> <span class="mi">31</span><span class="p">)</span>  <span class="c1"># ±30 days
</span>    
    <span class="k">for</span> <span class="n">lag</span> <span class="ow">in</span> <span class="n">lags</span><span class="p">:</span>
        <span class="k">if</span> <span class="n">lag</span> <span class="o">&gt;=</span> <span class="mi">0</span><span class="p">:</span>
            <span class="n">mjo_lagged</span> <span class="o">=</span> <span class="n">mjo_data</span><span class="p">[</span><span class="n">lag</span><span class="p">:]</span>
            <span class="n">kelvin_subset</span> <span class="o">=</span> <span class="n">kelvin_data</span><span class="p">[:</span><span class="o">-</span><span class="n">lag</span><span class="p">]</span> <span class="k">if</span> <span class="n">lag</span> <span class="o">&gt;</span> <span class="mi">0</span> <span class="k">else</span> <span class="n">kelvin_data</span>
        <span class="k">else</span><span class="p">:</span>
            <span class="n">mjo_lagged</span> <span class="o">=</span> <span class="n">mjo_data</span><span class="p">[:</span><span class="n">lag</span><span class="p">]</span>
            <span class="n">kelvin_subset</span> <span class="o">=</span> <span class="n">kelvin_data</span><span class="p">[</span><span class="o">-</span><span class="n">lag</span><span class="p">:]</span>
        
        <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">mjo_lagged</span><span class="p">)</span> <span class="o">==</span> <span class="nb">len</span><span class="p">(</span><span class="n">kelvin_subset</span><span class="p">):</span>
            <span class="n">corr</span><span class="p">,</span> <span class="n">_</span> <span class="o">=</span> <span class="n">pearsonr</span><span class="p">(</span><span class="n">mjo_lagged</span><span class="p">,</span> <span class="n">kelvin_subset</span><span class="p">)</span>
            <span class="n">correlations</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">corr</span><span class="p">)</span>
        <span class="k">else</span><span class="p">:</span>
            <span class="n">correlations</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">nan</span><span class="p">)</span>
    
    <span class="c1"># Plot results
</span>    <span class="n">plt</span><span class="p">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="mi">6</span><span class="p">))</span>
    <span class="n">plt</span><span class="p">.</span><span class="n">plot</span><span class="p">(</span><span class="n">lags</span><span class="p">,</span> <span class="n">correlations</span><span class="p">,</span> <span class="s">'b-'</span><span class="p">,</span> <span class="n">linewidth</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span>
    <span class="n">plt</span><span class="p">.</span><span class="n">axhline</span><span class="p">(</span><span class="n">y</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span> <span class="n">color</span><span class="o">=</span><span class="s">'k'</span><span class="p">,</span> <span class="n">linestyle</span><span class="o">=</span><span class="s">'--'</span><span class="p">,</span> <span class="n">alpha</span><span class="o">=</span><span class="mf">0.5</span><span class="p">)</span>
    <span class="n">plt</span><span class="p">.</span><span class="n">xlabel</span><span class="p">(</span><span class="s">'Lag (days)'</span><span class="p">)</span>
    <span class="n">plt</span><span class="p">.</span><span class="n">ylabel</span><span class="p">(</span><span class="s">'Cross-correlation'</span><span class="p">)</span>
    <span class="n">plt</span><span class="p">.</span><span class="n">title</span><span class="p">(</span><span class="s">'Kelvin Wave - MJO Interaction'</span><span class="p">)</span>
    <span class="n">plt</span><span class="p">.</span><span class="n">grid</span><span class="p">(</span><span class="bp">True</span><span class="p">,</span> <span class="n">alpha</span><span class="o">=</span><span class="mf">0.3</span><span class="p">)</span>
    
    <span class="k">return</span> <span class="n">correlations</span>
</code></pre></div></div>

<h2 id="impacts-on-weather-and-climate">Impacts on Weather and Climate</h2>

<h3 id="tropical-cyclone-formation">Tropical Cyclone Formation</h3>

<p>Both Kelvin waves and the MJO influence tropical cyclone development:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">analyze_tc_formation</span><span class="p">(</span><span class="n">tc_data</span><span class="p">,</span> <span class="n">wave_data</span><span class="p">):</span>
    <span class="s">"""Analyze tropical cyclone formation in relation to tropical waves."""</span>
    
    <span class="c1"># Create composite analysis
</span>    <span class="n">active_wave_periods</span> <span class="o">=</span> <span class="n">wave_data</span> <span class="o">&gt;</span> <span class="n">wave_data</span><span class="p">.</span><span class="n">std</span><span class="p">()</span>
    <span class="n">inactive_wave_periods</span> <span class="o">=</span> <span class="n">wave_data</span> <span class="o">&lt;</span> <span class="o">-</span><span class="n">wave_data</span><span class="p">.</span><span class="n">std</span><span class="p">()</span>
    
    <span class="c1"># Calculate TC formation rates
</span>    <span class="n">tc_active</span> <span class="o">=</span> <span class="n">tc_data</span><span class="p">[</span><span class="n">active_wave_periods</span><span class="p">].</span><span class="n">mean</span><span class="p">()</span>
    <span class="n">tc_inactive</span> <span class="o">=</span> <span class="n">tc_data</span><span class="p">[</span><span class="n">inactive_wave_periods</span><span class="p">].</span><span class="n">mean</span><span class="p">()</span>
    
    <span class="k">print</span><span class="p">(</span><span class="sa">f</span><span class="s">"TC formation rate during active wave periods: </span><span class="si">{</span><span class="n">tc_active</span><span class="si">:</span><span class="p">.</span><span class="mi">2</span><span class="n">f</span><span class="si">}</span><span class="s">/month"</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="sa">f</span><span class="s">"TC formation rate during inactive wave periods: </span><span class="si">{</span><span class="n">tc_inactive</span><span class="si">:</span><span class="p">.</span><span class="mi">2</span><span class="n">f</span><span class="si">}</span><span class="s">/month"</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="sa">f</span><span class="s">"Ratio: </span><span class="si">{</span><span class="n">tc_active</span><span class="o">/</span><span class="n">tc_inactive</span><span class="si">:</span><span class="p">.</span><span class="mi">2</span><span class="n">f</span><span class="si">}</span><span class="s">"</span><span class="p">)</span>
    
    <span class="k">return</span> <span class="n">tc_active</span><span class="p">,</span> <span class="n">tc_inactive</span>
</code></pre></div></div>

<h3 id="monsoon-variability">Monsoon Variability</h3>

<p>Tropical waves significantly affect monsoon systems:</p>

<ul>
  <li><strong>Onset timing</strong>: MJO can advance or delay monsoon onset</li>
  <li><strong>Break periods</strong>: Related to suppressed convection phases</li>
  <li><strong>Intensity variations</strong>: Wave-enhanced or weakened monsoon flow</li>
</ul>

<h2 id="numerical-modeling-challenges">Numerical Modeling Challenges</h2>

<h3 id="model-resolution-requirements">Model Resolution Requirements</h3>

<p>Simulating tropical waves requires careful consideration of:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Example WRF namelist configuration for tropical waves
</span><span class="n">wrf_config</span> <span class="o">=</span> <span class="p">{</span>
    <span class="s">'dx'</span><span class="p">:</span> <span class="mi">25000</span><span class="p">,</span>  <span class="c1"># 25 km horizontal resolution
</span>    <span class="s">'dt'</span><span class="p">:</span> <span class="mi">150</span><span class="p">,</span>    <span class="c1"># 150 second time step
</span>    <span class="s">'vertical_levels'</span><span class="p">:</span> <span class="mi">40</span><span class="p">,</span>
    <span class="s">'physics_options'</span><span class="p">:</span> <span class="p">{</span>
        <span class="s">'microphysics'</span><span class="p">:</span> <span class="s">'WSM6'</span><span class="p">,</span>
        <span class="s">'cumulus'</span><span class="p">:</span> <span class="s">'Kain-Fritsch'</span><span class="p">,</span>
        <span class="s">'pbl'</span><span class="p">:</span> <span class="s">'YSU'</span><span class="p">,</span>
        <span class="s">'surface_layer'</span><span class="p">:</span> <span class="s">'MM5'</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<h3 id="common-modeling-issues">Common Modeling Issues</h3>

<ol>
  <li><strong>Convective parameterization</strong>: Critical for tropical wave simulation</li>
  <li><strong>Boundary conditions</strong>: Proper initialization and lateral boundaries</li>
  <li><strong>Ocean coupling</strong>: Important for longer simulations</li>
  <li><strong>Computational cost</strong>: High-resolution simulations are expensive</li>
</ol>

<h2 id="future-research-directions">Future Research Directions</h2>

<h3 id="machine-learning-applications">Machine Learning Applications</h3>

<p>Emerging ML techniques for tropical wave research:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Example: LSTM for MJO prediction
</span><span class="kn">import</span> <span class="nn">tensorflow</span> <span class="k">as</span> <span class="n">tf</span>
<span class="kn">from</span> <span class="nn">tensorflow.keras.models</span> <span class="kn">import</span> <span class="n">Sequential</span>
<span class="kn">from</span> <span class="nn">tensorflow.keras.layers</span> <span class="kn">import</span> <span class="n">LSTM</span><span class="p">,</span> <span class="n">Dense</span>

<span class="k">def</span> <span class="nf">build_mjo_lstm</span><span class="p">(</span><span class="n">input_shape</span><span class="p">):</span>
    <span class="s">"""Build LSTM model for MJO prediction."""</span>
    
    <span class="n">model</span> <span class="o">=</span> <span class="n">Sequential</span><span class="p">([</span>
        <span class="n">LSTM</span><span class="p">(</span><span class="mi">50</span><span class="p">,</span> <span class="n">return_sequences</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span> <span class="n">input_shape</span><span class="o">=</span><span class="n">input_shape</span><span class="p">),</span>
        <span class="n">LSTM</span><span class="p">(</span><span class="mi">50</span><span class="p">,</span> <span class="n">return_sequences</span><span class="o">=</span><span class="bp">False</span><span class="p">),</span>
        <span class="n">Dense</span><span class="p">(</span><span class="mi">25</span><span class="p">,</span> <span class="n">activation</span><span class="o">=</span><span class="s">'relu'</span><span class="p">),</span>
        <span class="n">Dense</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span>  <span class="c1"># RMM1 and RMM2
</span>    <span class="p">])</span>
    
    <span class="n">model</span><span class="p">.</span><span class="nb">compile</span><span class="p">(</span><span class="n">optimizer</span><span class="o">=</span><span class="s">'adam'</span><span class="p">,</span> <span class="n">loss</span><span class="o">=</span><span class="s">'mse'</span><span class="p">)</span>
    <span class="k">return</span> <span class="n">model</span>
</code></pre></div></div>

<h3 id="climate-change-impacts">Climate Change Impacts</h3>

<p>Key research questions:</p>
<ul>
  <li>How will tropical waves change in a warming climate?</li>
  <li>What are the implications for extreme weather?</li>
  <li>How do we improve wave representation in climate models?</li>
</ul>

<h2 id="practical-applications">Practical Applications</h2>

<h3 id="forecasting">Forecasting</h3>

<p>Understanding tropical waves improves:</p>
<ul>
  <li><strong>Subseasonal forecasting</strong>: 2-8 week predictions</li>
  <li><strong>Seasonal outlooks</strong>: Monsoon and hurricane season forecasts</li>
  <li><strong>Climate projections</strong>: Long-term change assessments</li>
</ul>

<h3 id="early-warning-systems">Early Warning Systems</h3>

<p>Wave monitoring contributes to:</p>
<ul>
  <li>Tropical cyclone formation alerts</li>
  <li>Drought and flood predictions</li>
  <li>Agricultural planning</li>
</ul>

<h2 id="conclusion">Conclusion</h2>

<p>Tropical waves like Kelvin waves and the MJO are fundamental components of the climate system. My research has shown that:</p>

<ol>
  <li><strong>Wave interactions</strong> are more complex than previously thought</li>
  <li><strong>High-resolution modeling</strong> reveals new physical insights</li>
  <li><strong>Machine learning</strong> offers promising tools for analysis and prediction</li>
  <li><strong>Climate change</strong> impacts require urgent investigation</li>
</ol>

<p>Understanding these phenomena is crucial for improving weather and climate predictions, with significant implications for billions of people living in tropical regions.</p>

<h2 id="recommended-resources">Recommended Resources</h2>

<h3 id="key-papers">Key Papers</h3>
<ul>
  <li>Madden and Julian (1971): “Detection of a 40-50 day oscillation in the zonal wind”</li>
  <li>Wheeler and Hendon (2004): “An all-season real-time multivariate MJO index”</li>
  <li>Kiladis et al. (2009): “A comparison of OLR and circulation-based indices for tracking the MJO”</li>
</ul>

<h3 id="data-sources">Data Sources</h3>
<ul>
  <li><a href="https://www.cpc.ncep.noaa.gov/products/precip/CWlink/MJO/index.html">NOAA MJO Diagnostics</a></li>
  <li><a href="https://cds.climate.copernicus.eu/cdsapp#!/dataset/reanalysis-era5-pressure-levels">ERA5 Reanalysis</a></li>
  <li><a href="https://gpm.nasa.gov/data">TRMM/GPM Precipitation</a></li>
</ul>

<h3 id="modeling-tools">Modeling Tools</h3>
<ul>
  <li><a href="https://www.mmm.ucar.edu/weather-research-and-forecasting-model">WRF Model</a></li>
  <li><a href="https://www.clivar.org/clivar-panels/pacific">MJO Task Force</a></li>
</ul>

<hr />

<p><em>Interested in collaborating on tropical wave research? I’m always looking for new partnerships and data sharing opportunities. Reach out via <a href="mailto:xianpuji@hhu.edu.cn">email</a> or connect on <a href="https://linkedin.com/in/">LinkedIn</a>.</em></p>]]></content><author><name>Your Name</name></author><category term="jekyll-blog-template" /><category term="research" /><category term="climate" /><category term="tropical-meteorology" /><category term="kelvin-waves" /><category term="mjo" /><category term="atmospheric-dynamics" /><summary type="html"><![CDATA[Exploring the fascinating world of tropical atmospheric waves, their dynamics, and their crucial role in global weather patterns.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://blissful-jasper.github.io/assets/images/posts/tropical-waves.jpg" /><media:content medium="image" url="https://blissful-jasper.github.io/assets/images/posts/tropical-waves.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry></feed>