# auto-cleanup.config - 自动清理配置文件
# 此文件用于配置自动清理脚本的行为

# =============================================================================
# 基本配置
# =============================================================================

# 监控间隔（秒）- 检查文件变化的频率
WATCH_INTERVAL=5

# 清理延迟（秒）- 检测到文件变化后等待多长时间再清理
CLEANUP_DELAY=30

# 是否启用详细日志
VERBOSE_LOGGING=true

# 日志文件最大大小（MB）- 超过此大小时会轮转日志
LOG_MAX_SIZE=10

# =============================================================================
# 清理模式配置
# =============================================================================

# 标准清理模式 - 清理常见的临时文件
CLEANUP_PATTERNS_STANDARD=(
    "*.log"
    "*.tmp"
    "*~"
    ".DS_Store"
    "Thumbs.db"
    "*.swp"
    "*.swo"
    ".jekyll-metadata"
)

# 构建清理模式 - 清理构建相关的文件
CLEANUP_PATTERNS_BUILD=(
    "_site/*"
    ".sass-cache/*"
    ".jekyll-cache/*"
    "node_modules/.cache/*"
    ".bundle/cache/*"
)

# 开发清理模式 - 清理开发工具产生的文件
CLEANUP_PATTERNS_DEV=(
    "*.pid"
    "*.lock.tmp"
    ".vscode/settings.json.tmp"
    "debug.log"
    "error.log"
)

# 深度清理模式 - 清理所有可能的临时文件（慎用）
CLEANUP_PATTERNS_DEEP=(
    "Gemfile.lock"
    "package-lock.json"
    "yarn.lock"
    ".bundle/*"
    "vendor/*"
)

# =============================================================================
# 排除配置
# =============================================================================

# 永远不清理的目录
EXCLUDE_DIRECTORIES=(
    ".git"
    "_posts"
    "_pages"
    "_data"
    "_includes"
    "_layouts"
    "assets"
    "cv"
    "projects"
    "research"
    "publications"
)

# 永远不清理的文件
EXCLUDE_FILES=(
    "_config.yml"
    "_config_dev.yml"
    "_config_secure.yml"
    "Gemfile"
    "package.json"
    "README.md"
    "LICENSE"
    ".gitignore"
)

# 文件扩展名白名单 - 这些扩展名的文件永远不会被清理
WHITELIST_EXTENSIONS=(
    ".md"
    ".html"
    ".css"
    ".scss"
    ".js"
    ".json"
    ".yml"
    ".yaml"
    ".png"
    ".jpg"
    ".jpeg"
    ".gif"
    ".svg"
    ".pdf"
    ".ico"
)

# =============================================================================
# 触发条件配置
# =============================================================================

# 触发清理的文件类型变化
TRIGGER_EXTENSIONS=(
    ".md"
    ".html"
    ".scss"
    ".css"
    ".js"
    ".yml"
    ".yaml"
)

# 触发清理的目录
TRIGGER_DIRECTORIES=(
    "_posts"
    "_pages"
    "_sass"
    "assets"
    "_data"
)

# =============================================================================
# 通知配置
# =============================================================================

# 是否启用清理完成通知
ENABLE_NOTIFICATIONS=true

# 通知方式：console（控制台）、file（文件）、both（两者）
NOTIFICATION_MODE=both

# 通知摘要间隔（分钟）- 多长时间汇总一次清理结果
NOTIFICATION_SUMMARY_INTERVAL=60

# =============================================================================
# 高级配置
# =============================================================================

# 是否在清理前创建备份
CREATE_BACKUP_BEFORE_CLEANUP=false

# 备份目录
BACKUP_DIRECTORY=".cleanup-backup"

# 备份保留天数
BACKUP_RETENTION_DAYS=7

# 是否启用清理统计
ENABLE_CLEANUP_STATS=true

# 统计文件路径
STATS_FILE=".cleanup-stats.json"

# 是否启用自动优化清理模式
AUTO_OPTIMIZE_CLEANUP=true

# =============================================================================
# 性能配置
# =============================================================================

# 单次清理的最大文件数
MAX_FILES_PER_CLEANUP=1000

# 清理操作超时时间（秒）
CLEANUP_TIMEOUT=300

# 并发清理线程数
CLEANUP_THREADS=4

# 是否启用增量清理（只清理变化的区域）
ENABLE_INCREMENTAL_CLEANUP=true

# =============================================================================
# 调试配置
# =============================================================================

# 是否启用调试模式
DEBUG_MODE=false

# 调试日志级别：ERROR、WARNING、INFO、DEBUG
DEBUG_LOG_LEVEL=INFO

# 是否保留清理历史
KEEP_CLEANUP_HISTORY=true

# 清理历史保留天数
CLEANUP_HISTORY_DAYS=30

# =============================================================================
# 自定义规则示例
# =============================================================================

# 可以在这里添加项目特定的清理规则
# 例如：
# CUSTOM_PATTERNS=(
#     "my-specific-temp-files-*.tmp"
#     "project-cache/*"
# )

# 可以在这里添加特定时间的清理任务
# 例如：每天凌晨2点执行深度清理
# SCHEDULED_CLEANUP_TIME="02:00"
# SCHEDULED_CLEANUP_MODE="deep"
